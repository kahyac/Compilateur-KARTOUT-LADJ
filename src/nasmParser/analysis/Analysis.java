/* This file was generated by SableCC (http://www.sablecc.org/). */

package nasmParser.analysis;

import nasmParser.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAProg(AProg node);
    void caseARecLinclude(ARecLinclude node);
    void caseAEmptyLinclude(AEmptyLinclude node);
    void caseAInclude(AInclude node);
    void caseASimpleFilename(ASimpleFilename node);
    void caseAComplexFilename(AComplexFilename node);
    void caseANonemptySecdata(ANonemptySecdata node);
    void caseAEmptySecdata(AEmptySecdata node);
    void caseARecLconst(ARecLconst node);
    void caseAEmptyLconst(AEmptyLconst node);
    void caseADbConst(ADbConst node);
    void caseADwConst(ADwConst node);
    void caseADdConst(ADdConst node);
    void caseADqConst(ADqConst node);
    void caseADtConst(ADtConst node);
    void caseANonemptySecbss(ANonemptySecbss node);
    void caseAEmptySecbss(AEmptySecbss node);
    void caseARecLvar(ARecLvar node);
    void caseAEmptyLvar(AEmptyLvar node);
    void caseAResbVar(AResbVar node);
    void caseAReswVar(AReswVar node);
    void caseAResdVar(AResdVar node);
    void caseAResqVar(AResqVar node);
    void caseARestVar(ARestVar node);
    void caseASectext(ASectext node);
    void caseARecLglobal(ARecLglobal node);
    void caseAEmptyLglobal(AEmptyLglobal node);
    void caseARecLinst(ARecLinst node);
    void caseALastLinst(ALastLinst node);
    void caseAMovInst(AMovInst node);
    void caseAPushInst(APushInst node);
    void caseAPopInst(APopInst node);
    void caseAAddInst(AAddInst node);
    void caseASubInst(ASubInst node);
    void caseAImulInst(AImulInst node);
    void caseAIdivInst(AIdivInst node);
    void caseAAndInst(AAndInst node);
    void caseAOrInst(AOrInst node);
    void caseAXorInst(AXorInst node);
    void caseANotInst(ANotInst node);
    void caseACmpInst(ACmpInst node);
    void caseAJmpInst(AJmpInst node);
    void caseAJeInst(AJeInst node);
    void caseAJneInst(AJneInst node);
    void caseAJgInst(AJgInst node);
    void caseAJgeInst(AJgeInst node);
    void caseAJlInst(AJlInst node);
    void caseACallInst(ACallInst node);
    void caseARetInst(ARetInst node);
    void caseAInterInst(AInterInst node);
    void caseAAddressAcr(AAddressAcr node);
    void caseANumconstAcr(ANumconstAcr node);
    void caseARegisterAcr(ARegisterAcr node);
    void caseAAddressAr(AAddressAr node);
    void caseARegisterAr(ARegisterAr node);
    void caseAAddress(AAddress node);
    void caseAByteOpsizeof(AByteOpsizeof node);
    void caseAWordOpsizeof(AWordOpsizeof node);
    void caseADwordOpsizeof(ADwordOpsizeof node);
    void caseAEmptyOpsizeof(AEmptyOpsizeof node);
    void caseAPlusExp(APlusExp node);
    void caseAMinusExp(AMinusExp node);
    void caseANextExp(ANextExp node);
    void caseATimesExp1(ATimesExp1 node);
    void caseANextExp1(ANextExp1 node);
    void caseALabelExp2(ALabelExp2 node);
    void caseANumconstExp2(ANumconstExp2 node);
    void caseARegisterExp2(ARegisterExp2 node);
    void caseANumconst(ANumconst node);
    void caseATempRegister(ATempRegister node);
    void caseAEaxRegister(AEaxRegister node);
    void caseAEbxRegister(AEbxRegister node);
    void caseAEcxRegister(AEcxRegister node);
    void caseAEdxRegister(AEdxRegister node);
    void caseAEbpRegister(AEbpRegister node);
    void caseAEspRegister(AEspRegister node);
    void caseALabelOplabel(ALabelOplabel node);
    void caseAEmptyOplabel(AEmptyOplabel node);
    void caseALabel(ALabel node);

    void caseTSpaces(TSpaces node);
    void caseTComment(TComment node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTTimes(TTimes node);
    void caseTBrackopen(TBrackopen node);
    void caseTBrackclose(TBrackclose node);
    void caseTSemicol(TSemicol node);
    void caseTComma(TComma node);
    void caseTQuote(TQuote node);
    void caseTDot(TDot node);
    void caseTPercentage(TPercentage node);
    void caseTByte(TByte node);
    void caseTWord(TWord node);
    void caseTDword(TDword node);
    void caseTPrefixRegister(TPrefixRegister node);
    void caseTInc(TInc node);
    void caseTSection(TSection node);
    void caseTData(TData node);
    void caseTDefinebyte(TDefinebyte node);
    void caseTDefineword(TDefineword node);
    void caseTDefinedoubleword(TDefinedoubleword node);
    void caseTDefinequadword(TDefinequadword node);
    void caseTDefinetenbytes(TDefinetenbytes node);
    void caseTBss(TBss node);
    void caseTReservebyte(TReservebyte node);
    void caseTReserveword(TReserveword node);
    void caseTReservedoubleword(TReservedoubleword node);
    void caseTReservequadword(TReservequadword node);
    void caseTReservetenbytes(TReservetenbytes node);
    void caseTText(TText node);
    void caseTGlobal(TGlobal node);
    void caseTMov(TMov node);
    void caseTPush(TPush node);
    void caseTPop(TPop node);
    void caseTAdd(TAdd node);
    void caseTSub(TSub node);
    void caseTImul(TImul node);
    void caseTIdiv(TIdiv node);
    void caseTAnd(TAnd node);
    void caseTOr(TOr node);
    void caseTXor(TXor node);
    void caseTNot(TNot node);
    void caseTCmp(TCmp node);
    void caseTJmp(TJmp node);
    void caseTJe(TJe node);
    void caseTJne(TJne node);
    void caseTJg(TJg node);
    void caseTJge(TJge node);
    void caseTJl(TJl node);
    void caseTJle(TJle node);
    void caseTCall(TCall node);
    void caseTRet(TRet node);
    void caseTInt(TInt node);
    void caseTEax(TEax node);
    void caseTEbx(TEbx node);
    void caseTEcx(TEcx node);
    void caseTEdx(TEdx node);
    void caseTEbp(TEbp node);
    void caseTEsp(TEsp node);
    void caseTNumber(TNumber node);
    void caseTId(TId node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
