/* This file was generated by SableCC (http://www.sablecc.org/). */

package nasmParser.analysis;

import java.util.*;
import nasmParser.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProg(AProg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARecLinclude(ARecLinclude node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptyLinclude(AEmptyLinclude node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInclude(AInclude node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleFilename(ASimpleFilename node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComplexFilename(AComplexFilename node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANonemptySecdata(ANonemptySecdata node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptySecdata(AEmptySecdata node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARecLconst(ARecLconst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptyLconst(AEmptyLconst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADbConst(ADbConst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADwConst(ADwConst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADdConst(ADdConst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADqConst(ADqConst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADtConst(ADtConst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANonemptySecbss(ANonemptySecbss node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptySecbss(AEmptySecbss node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARecLvar(ARecLvar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptyLvar(AEmptyLvar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAResbVar(AResbVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAReswVar(AReswVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAResdVar(AResdVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAResqVar(AResqVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARestVar(ARestVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASectext(ASectext node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARecLglobal(ARecLglobal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptyLglobal(AEmptyLglobal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARecLinst(ARecLinst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALastLinst(ALastLinst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMovInst(AMovInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPushInst(APushInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPopInst(APopInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddInst(AAddInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubInst(ASubInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAImulInst(AImulInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdivInst(AIdivInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAndInst(AAndInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOrInst(AOrInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAXorInst(AXorInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANotInst(ANotInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACmpInst(ACmpInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAJmpInst(AJmpInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAJeInst(AJeInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAJneInst(AJneInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAJgInst(AJgInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAJgeInst(AJgeInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAJlInst(AJlInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACallInst(ACallInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARetInst(ARetInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInterInst(AInterInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddressAcr(AAddressAcr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumconstAcr(ANumconstAcr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARegisterAcr(ARegisterAcr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddressAr(AAddressAr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARegisterAr(ARegisterAr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddress(AAddress node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAByteOpsizeof(AByteOpsizeof node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWordOpsizeof(AWordOpsizeof node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADwordOpsizeof(ADwordOpsizeof node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptyOpsizeof(AEmptyOpsizeof node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPlusExp(APlusExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMinusExp(AMinusExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANextExp(ANextExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATimesExp1(ATimesExp1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANextExp1(ANextExp1 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALabelExp2(ALabelExp2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumconstExp2(ANumconstExp2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARegisterExp2(ARegisterExp2 node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumconst(ANumconst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATempRegister(ATempRegister node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEaxRegister(AEaxRegister node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEbxRegister(AEbxRegister node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEcxRegister(AEcxRegister node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEdxRegister(AEdxRegister node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEbpRegister(AEbpRegister node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEspRegister(AEspRegister node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALabelOplabel(ALabelOplabel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptyOplabel(AEmptyOplabel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALabel(ALabel node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSpaces(TSpaces node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComment(TComment node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTimes(TTimes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBrackopen(TBrackopen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBrackclose(TBrackclose node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSemicol(TSemicol node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTQuote(TQuote node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPercentage(TPercentage node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTByte(TByte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWord(TWord node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDword(TDword node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPrefixRegister(TPrefixRegister node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInc(TInc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSection(TSection node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTData(TData node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDefinebyte(TDefinebyte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDefineword(TDefineword node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDefinedoubleword(TDefinedoubleword node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDefinequadword(TDefinequadword node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDefinetenbytes(TDefinetenbytes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBss(TBss node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReservebyte(TReservebyte node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReserveword(TReserveword node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReservedoubleword(TReservedoubleword node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReservequadword(TReservequadword node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReservetenbytes(TReservetenbytes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTText(TText node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGlobal(TGlobal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMov(TMov node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPush(TPush node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPop(TPop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAdd(TAdd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSub(TSub node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTImul(TImul node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdiv(TIdiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAnd(TAnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOr(TOr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTXor(TXor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNot(TNot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCmp(TCmp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTJmp(TJmp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTJe(TJe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTJne(TJne node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTJg(TJg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTJge(TJge node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTJl(TJl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTJle(TJle node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCall(TCall node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRet(TRet node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInt(TInt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEax(TEax node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEbx(TEbx node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEcx(TEcx node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEdx(TEdx node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEbp(TEbp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEsp(TEsp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumber(TNumber node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
