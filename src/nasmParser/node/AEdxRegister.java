/* This file was generated by SableCC (http://www.sablecc.org/). */

package nasmParser.node;

import nasmParser.analysis.*;

@SuppressWarnings("nls")
public final class AEdxRegister extends PRegister
{
    private TEdx _edx_;

    public AEdxRegister()
    {
        // Constructor
    }

    public AEdxRegister(
        @SuppressWarnings("hiding") TEdx _edx_)
    {
        // Constructor
        setEdx(_edx_);

    }

    @Override
    public Object clone()
    {
        return new AEdxRegister(
            cloneNode(this._edx_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEdxRegister(this);
    }

    public TEdx getEdx()
    {
        return this._edx_;
    }

    public void setEdx(TEdx node)
    {
        if(this._edx_ != null)
        {
            this._edx_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._edx_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._edx_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._edx_ == child)
        {
            this._edx_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._edx_ == oldChild)
        {
            setEdx((TEdx) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
