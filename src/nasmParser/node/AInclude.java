/* This file was generated by SableCC (http://www.sablecc.org/). */

package nasmParser.node;

import nasmParser.analysis.*;

@SuppressWarnings("nls")
public final class AInclude extends PInclude
{
    private TPercentage _percentage_;
    private TInc _inc_;
    private TQuote _open_;
    private PFilename _filename_;
    private TQuote _close_;

    public AInclude()
    {
        // Constructor
    }

    public AInclude(
        @SuppressWarnings("hiding") TPercentage _percentage_,
        @SuppressWarnings("hiding") TInc _inc_,
        @SuppressWarnings("hiding") TQuote _open_,
        @SuppressWarnings("hiding") PFilename _filename_,
        @SuppressWarnings("hiding") TQuote _close_)
    {
        // Constructor
        setPercentage(_percentage_);

        setInc(_inc_);

        setOpen(_open_);

        setFilename(_filename_);

        setClose(_close_);

    }

    @Override
    public Object clone()
    {
        return new AInclude(
            cloneNode(this._percentage_),
            cloneNode(this._inc_),
            cloneNode(this._open_),
            cloneNode(this._filename_),
            cloneNode(this._close_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAInclude(this);
    }

    public TPercentage getPercentage()
    {
        return this._percentage_;
    }

    public void setPercentage(TPercentage node)
    {
        if(this._percentage_ != null)
        {
            this._percentage_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._percentage_ = node;
    }

    public TInc getInc()
    {
        return this._inc_;
    }

    public void setInc(TInc node)
    {
        if(this._inc_ != null)
        {
            this._inc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._inc_ = node;
    }

    public TQuote getOpen()
    {
        return this._open_;
    }

    public void setOpen(TQuote node)
    {
        if(this._open_ != null)
        {
            this._open_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._open_ = node;
    }

    public PFilename getFilename()
    {
        return this._filename_;
    }

    public void setFilename(PFilename node)
    {
        if(this._filename_ != null)
        {
            this._filename_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._filename_ = node;
    }

    public TQuote getClose()
    {
        return this._close_;
    }

    public void setClose(TQuote node)
    {
        if(this._close_ != null)
        {
            this._close_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._close_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._percentage_)
            + toString(this._inc_)
            + toString(this._open_)
            + toString(this._filename_)
            + toString(this._close_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._percentage_ == child)
        {
            this._percentage_ = null;
            return;
        }

        if(this._inc_ == child)
        {
            this._inc_ = null;
            return;
        }

        if(this._open_ == child)
        {
            this._open_ = null;
            return;
        }

        if(this._filename_ == child)
        {
            this._filename_ = null;
            return;
        }

        if(this._close_ == child)
        {
            this._close_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._percentage_ == oldChild)
        {
            setPercentage((TPercentage) newChild);
            return;
        }

        if(this._inc_ == oldChild)
        {
            setInc((TInc) newChild);
            return;
        }

        if(this._open_ == oldChild)
        {
            setOpen((TQuote) newChild);
            return;
        }

        if(this._filename_ == oldChild)
        {
            setFilename((PFilename) newChild);
            return;
        }

        if(this._close_ == oldChild)
        {
            setClose((TQuote) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
