/* This file was generated by SableCC (http://www.sablecc.org/). */

package nasmParser.node;

import nasmParser.analysis.*;

@SuppressWarnings("nls")
public final class ANonemptySecdata extends PSecdata
{
    private TSection _section_;
    private TData _data_;
    private PLconst _lconst_;

    public ANonemptySecdata()
    {
        // Constructor
    }

    public ANonemptySecdata(
        @SuppressWarnings("hiding") TSection _section_,
        @SuppressWarnings("hiding") TData _data_,
        @SuppressWarnings("hiding") PLconst _lconst_)
    {
        // Constructor
        setSection(_section_);

        setData(_data_);

        setLconst(_lconst_);

    }

    @Override
    public Object clone()
    {
        return new ANonemptySecdata(
            cloneNode(this._section_),
            cloneNode(this._data_),
            cloneNode(this._lconst_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANonemptySecdata(this);
    }

    public TSection getSection()
    {
        return this._section_;
    }

    public void setSection(TSection node)
    {
        if(this._section_ != null)
        {
            this._section_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._section_ = node;
    }

    public TData getData()
    {
        return this._data_;
    }

    public void setData(TData node)
    {
        if(this._data_ != null)
        {
            this._data_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._data_ = node;
    }

    public PLconst getLconst()
    {
        return this._lconst_;
    }

    public void setLconst(PLconst node)
    {
        if(this._lconst_ != null)
        {
            this._lconst_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lconst_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._section_)
            + toString(this._data_)
            + toString(this._lconst_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._section_ == child)
        {
            this._section_ = null;
            return;
        }

        if(this._data_ == child)
        {
            this._data_ = null;
            return;
        }

        if(this._lconst_ == child)
        {
            this._lconst_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._section_ == oldChild)
        {
            setSection((TSection) newChild);
            return;
        }

        if(this._data_ == oldChild)
        {
            setData((TData) newChild);
            return;
        }

        if(this._lconst_ == oldChild)
        {
            setLconst((PLconst) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
