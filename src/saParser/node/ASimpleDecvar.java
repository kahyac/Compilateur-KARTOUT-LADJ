/* This file was generated by SableCC (http://www.sablecc.org/). */

package saParser.node;

import saParser.analysis.*;

@SuppressWarnings("nls")
public final class ASimpleDecvar extends PDecvar
{
    private TPo _po_;
    private TSadecvarsimple _sadecvarsimple_;
    private TId _id_;
    private PType _type_;
    private TPf _pf_;

    public ASimpleDecvar()
    {
        // Constructor
    }

    public ASimpleDecvar(
        @SuppressWarnings("hiding") TPo _po_,
        @SuppressWarnings("hiding") TSadecvarsimple _sadecvarsimple_,
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") PType _type_,
        @SuppressWarnings("hiding") TPf _pf_)
    {
        // Constructor
        setPo(_po_);

        setSadecvarsimple(_sadecvarsimple_);

        setId(_id_);

        setType(_type_);

        setPf(_pf_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleDecvar(
            cloneNode(this._po_),
            cloneNode(this._sadecvarsimple_),
            cloneNode(this._id_),
            cloneNode(this._type_),
            cloneNode(this._pf_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleDecvar(this);
    }

    public TPo getPo()
    {
        return this._po_;
    }

    public void setPo(TPo node)
    {
        if(this._po_ != null)
        {
            this._po_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._po_ = node;
    }

    public TSadecvarsimple getSadecvarsimple()
    {
        return this._sadecvarsimple_;
    }

    public void setSadecvarsimple(TSadecvarsimple node)
    {
        if(this._sadecvarsimple_ != null)
        {
            this._sadecvarsimple_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sadecvarsimple_ = node;
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public PType getType()
    {
        return this._type_;
    }

    public void setType(PType node)
    {
        if(this._type_ != null)
        {
            this._type_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._type_ = node;
    }

    public TPf getPf()
    {
        return this._pf_;
    }

    public void setPf(TPf node)
    {
        if(this._pf_ != null)
        {
            this._pf_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pf_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._po_)
            + toString(this._sadecvarsimple_)
            + toString(this._id_)
            + toString(this._type_)
            + toString(this._pf_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._po_ == child)
        {
            this._po_ = null;
            return;
        }

        if(this._sadecvarsimple_ == child)
        {
            this._sadecvarsimple_ = null;
            return;
        }

        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._type_ == child)
        {
            this._type_ = null;
            return;
        }

        if(this._pf_ == child)
        {
            this._pf_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._po_ == oldChild)
        {
            setPo((TPo) newChild);
            return;
        }

        if(this._sadecvarsimple_ == oldChild)
        {
            setSadecvarsimple((TSadecvarsimple) newChild);
            return;
        }

        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._type_ == oldChild)
        {
            setType((PType) newChild);
            return;
        }

        if(this._pf_ == oldChild)
        {
            setPf((TPf) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
