/* This file was generated by SableCC (http://www.sablecc.org/). */

package saParser.node;

import saParser.analysis.*;

@SuppressWarnings("nls")
public final class ARecLdecfonc extends PLdecfonc
{
    private TPo _po_;
    private TSaldecfonc _saldecfonc_;
    private PDecfonc _decfonc_;
    private PLdecfonc _ldecfonc_;
    private TPf _pf_;

    public ARecLdecfonc()
    {
        // Constructor
    }

    public ARecLdecfonc(
        @SuppressWarnings("hiding") TPo _po_,
        @SuppressWarnings("hiding") TSaldecfonc _saldecfonc_,
        @SuppressWarnings("hiding") PDecfonc _decfonc_,
        @SuppressWarnings("hiding") PLdecfonc _ldecfonc_,
        @SuppressWarnings("hiding") TPf _pf_)
    {
        // Constructor
        setPo(_po_);

        setSaldecfonc(_saldecfonc_);

        setDecfonc(_decfonc_);

        setLdecfonc(_ldecfonc_);

        setPf(_pf_);

    }

    @Override
    public Object clone()
    {
        return new ARecLdecfonc(
            cloneNode(this._po_),
            cloneNode(this._saldecfonc_),
            cloneNode(this._decfonc_),
            cloneNode(this._ldecfonc_),
            cloneNode(this._pf_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseARecLdecfonc(this);
    }

    public TPo getPo()
    {
        return this._po_;
    }

    public void setPo(TPo node)
    {
        if(this._po_ != null)
        {
            this._po_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._po_ = node;
    }

    public TSaldecfonc getSaldecfonc()
    {
        return this._saldecfonc_;
    }

    public void setSaldecfonc(TSaldecfonc node)
    {
        if(this._saldecfonc_ != null)
        {
            this._saldecfonc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._saldecfonc_ = node;
    }

    public PDecfonc getDecfonc()
    {
        return this._decfonc_;
    }

    public void setDecfonc(PDecfonc node)
    {
        if(this._decfonc_ != null)
        {
            this._decfonc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._decfonc_ = node;
    }

    public PLdecfonc getLdecfonc()
    {
        return this._ldecfonc_;
    }

    public void setLdecfonc(PLdecfonc node)
    {
        if(this._ldecfonc_ != null)
        {
            this._ldecfonc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ldecfonc_ = node;
    }

    public TPf getPf()
    {
        return this._pf_;
    }

    public void setPf(TPf node)
    {
        if(this._pf_ != null)
        {
            this._pf_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pf_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._po_)
            + toString(this._saldecfonc_)
            + toString(this._decfonc_)
            + toString(this._ldecfonc_)
            + toString(this._pf_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._po_ == child)
        {
            this._po_ = null;
            return;
        }

        if(this._saldecfonc_ == child)
        {
            this._saldecfonc_ = null;
            return;
        }

        if(this._decfonc_ == child)
        {
            this._decfonc_ = null;
            return;
        }

        if(this._ldecfonc_ == child)
        {
            this._ldecfonc_ = null;
            return;
        }

        if(this._pf_ == child)
        {
            this._pf_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._po_ == oldChild)
        {
            setPo((TPo) newChild);
            return;
        }

        if(this._saldecfonc_ == oldChild)
        {
            setSaldecfonc((TSaldecfonc) newChild);
            return;
        }

        if(this._decfonc_ == oldChild)
        {
            setDecfonc((PDecfonc) newChild);
            return;
        }

        if(this._ldecfonc_ == oldChild)
        {
            setLdecfonc((PLdecfonc) newChild);
            return;
        }

        if(this._pf_ == oldChild)
        {
            setPf((TPf) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
