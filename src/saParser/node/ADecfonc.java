/* This file was generated by SableCC (http://www.sablecc.org/). */

package saParser.node;

import saParser.analysis.*;

@SuppressWarnings("nls")
public final class ADecfonc extends PDecfonc
{
    private TPo _po_;
    private TSadecfonc _sadecfonc_;
    private TId _id_;
    private PType _type_;
    private PLdecvar _param_;
    private PLdecvar _variables_;
    private PInst _inst_;
    private TPf _pf_;

    public ADecfonc()
    {
        // Constructor
    }

    public ADecfonc(
        @SuppressWarnings("hiding") TPo _po_,
        @SuppressWarnings("hiding") TSadecfonc _sadecfonc_,
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") PType _type_,
        @SuppressWarnings("hiding") PLdecvar _param_,
        @SuppressWarnings("hiding") PLdecvar _variables_,
        @SuppressWarnings("hiding") PInst _inst_,
        @SuppressWarnings("hiding") TPf _pf_)
    {
        // Constructor
        setPo(_po_);

        setSadecfonc(_sadecfonc_);

        setId(_id_);

        setType(_type_);

        setParam(_param_);

        setVariables(_variables_);

        setInst(_inst_);

        setPf(_pf_);

    }

    @Override
    public Object clone()
    {
        return new ADecfonc(
            cloneNode(this._po_),
            cloneNode(this._sadecfonc_),
            cloneNode(this._id_),
            cloneNode(this._type_),
            cloneNode(this._param_),
            cloneNode(this._variables_),
            cloneNode(this._inst_),
            cloneNode(this._pf_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADecfonc(this);
    }

    public TPo getPo()
    {
        return this._po_;
    }

    public void setPo(TPo node)
    {
        if(this._po_ != null)
        {
            this._po_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._po_ = node;
    }

    public TSadecfonc getSadecfonc()
    {
        return this._sadecfonc_;
    }

    public void setSadecfonc(TSadecfonc node)
    {
        if(this._sadecfonc_ != null)
        {
            this._sadecfonc_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sadecfonc_ = node;
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public PType getType()
    {
        return this._type_;
    }

    public void setType(PType node)
    {
        if(this._type_ != null)
        {
            this._type_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._type_ = node;
    }

    public PLdecvar getParam()
    {
        return this._param_;
    }

    public void setParam(PLdecvar node)
    {
        if(this._param_ != null)
        {
            this._param_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._param_ = node;
    }

    public PLdecvar getVariables()
    {
        return this._variables_;
    }

    public void setVariables(PLdecvar node)
    {
        if(this._variables_ != null)
        {
            this._variables_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._variables_ = node;
    }

    public PInst getInst()
    {
        return this._inst_;
    }

    public void setInst(PInst node)
    {
        if(this._inst_ != null)
        {
            this._inst_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._inst_ = node;
    }

    public TPf getPf()
    {
        return this._pf_;
    }

    public void setPf(TPf node)
    {
        if(this._pf_ != null)
        {
            this._pf_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._pf_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._po_)
            + toString(this._sadecfonc_)
            + toString(this._id_)
            + toString(this._type_)
            + toString(this._param_)
            + toString(this._variables_)
            + toString(this._inst_)
            + toString(this._pf_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._po_ == child)
        {
            this._po_ = null;
            return;
        }

        if(this._sadecfonc_ == child)
        {
            this._sadecfonc_ = null;
            return;
        }

        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._type_ == child)
        {
            this._type_ = null;
            return;
        }

        if(this._param_ == child)
        {
            this._param_ = null;
            return;
        }

        if(this._variables_ == child)
        {
            this._variables_ = null;
            return;
        }

        if(this._inst_ == child)
        {
            this._inst_ = null;
            return;
        }

        if(this._pf_ == child)
        {
            this._pf_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._po_ == oldChild)
        {
            setPo((TPo) newChild);
            return;
        }

        if(this._sadecfonc_ == oldChild)
        {
            setSadecfonc((TSadecfonc) newChild);
            return;
        }

        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        if(this._type_ == oldChild)
        {
            setType((PType) newChild);
            return;
        }

        if(this._param_ == oldChild)
        {
            setParam((PLdecvar) newChild);
            return;
        }

        if(this._variables_ == oldChild)
        {
            setVariables((PLdecvar) newChild);
            return;
        }

        if(this._inst_ == oldChild)
        {
            setInst((PInst) newChild);
            return;
        }

        if(this._pf_ == oldChild)
        {
            setPf((TPf) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
