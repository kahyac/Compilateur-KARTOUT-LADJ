/* This file was generated by SableCC (http://www.sablecc.org/). */

package saParser.lexer;

import java.io.*;
import saParser.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEspaces(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCommentaire(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPo(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPf(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaappel(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSadecfonc(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSadectab(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSadecvar(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSadecvarsimple(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaexpadd(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaexpand(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaexpappel(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaexpdiv(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaexpequal(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaexpfaux(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaexpinf(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaexpint(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaexplire(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaexpmult(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaexpnot(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaexpor(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaexpsub(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaexpvar(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaexpvrai(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSainstaffect(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSainstbloc(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSainstecriture(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSainstretour(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSainstsi(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSainsttantque(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaldecfonc(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaldecvar(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSalexp(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSalinst(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaprog(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSavarindicee(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSavarsimple(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFaux(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVrai(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLire(line, pos); }
    Token new40(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNull(line, pos); }
    Token new41(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEntier(line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBool(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNul(line, pos); }
    Token new44(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInteger(text, line, pos); }
    Token new45(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TId(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {35, 35, 5}, {36, 36, 6}, {40, 40, 7}, {41, 41, 8}, {48, 57, 9}, {65, 82, 6}, {83, 83, 10}, {84, 90, 6}, {95, 95, 6}, {97, 97, 6}, {98, 98, 11}, {99, 100, 6}, {101, 101, 12}, {102, 102, 13}, {103, 107, 6}, {108, 108, 14}, {109, 109, 6}, {110, 110, 15}, {111, 117, 6}, {118, 118, 16}, {119, 122, 6}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{0, 9, 17}, {10, 10, 18}, {11, 12, 17}, {13, 13, 19}, {14, 65535, 17}, },
            {{48, 57, 20}, {65, 90, 20}, {97, 122, 20}, },
            {},
            {},
            {{48, 57, 9}, },
            {{48, 90, -8}, {97, 97, 21}, {98, 122, 20}, },
            {{48, 90, -8}, {97, 110, 20}, {111, 111, 22}, {112, 122, 20}, },
            {{48, 90, -8}, {97, 109, 20}, {110, 110, 23}, {111, 122, 20}, },
            {{48, 90, -8}, {97, 97, 24}, {98, 122, 20}, },
            {{48, 90, -8}, {97, 104, 20}, {105, 105, 25}, {106, 122, 20}, },
            {{48, 90, -8}, {97, 116, 20}, {117, 117, 26}, {118, 122, 20}, },
            {{48, 90, -8}, {97, 113, 20}, {114, 114, 27}, {115, 122, 20}, },
            {{0, 65535, -7}, },
            {{13, 13, 28}, },
            {},
            {{48, 122, -8}, },
            {{48, 57, 20}, {65, 65, 29}, {66, 67, 20}, {68, 68, 30}, {69, 69, 31}, {70, 72, 20}, {73, 73, 32}, {74, 75, 20}, {76, 76, 33}, {77, 79, 20}, {80, 80, 34}, {81, 85, 20}, {86, 86, 35}, {87, 90, 20}, {97, 122, 20}, },
            {{48, 110, -13}, {111, 111, 36}, {112, 122, 20}, },
            {{48, 90, -8}, {97, 115, 20}, {116, 116, 37}, {117, 122, 20}, },
            {{48, 116, -17}, {117, 117, 38}, {118, 122, 20}, },
            {{48, 113, -18}, {114, 114, 39}, {115, 122, 20}, },
            {{48, 90, -8}, {97, 107, 20}, {108, 108, 40}, {109, 122, 20}, },
            {{48, 90, -8}, {97, 97, 41}, {98, 122, 20}, },
            {},
            {{48, 90, -8}, {97, 111, 20}, {112, 112, 42}, {113, 122, 20}, },
            {{48, 90, -8}, {97, 100, 20}, {101, 101, 43}, {102, 122, 20}, },
            {{48, 90, -8}, {97, 119, 20}, {120, 120, 44}, {121, 122, 20}, },
            {{48, 109, -14}, {110, 110, 45}, {111, 122, 20}, },
            {{48, 57, 20}, {65, 67, 20}, {68, 68, 46}, {69, 69, 47}, {70, 72, 20}, {73, 73, 48}, {74, 90, 20}, {97, 122, 20}, },
            {{48, 113, -18}, {114, 114, 49}, {115, 122, 20}, },
            {{48, 90, -8}, {97, 97, 50}, {98, 122, 20}, },
            {{48, 107, -28}, {108, 108, 51}, {109, 122, 20}, },
            {{48, 104, -16}, {105, 105, 52}, {106, 122, 20}, },
            {{48, 119, -33}, {120, 120, 53}, {121, 122, 20}, },
            {{48, 100, -32}, {101, 101, 54}, {102, 122, 20}, },
            {{48, 107, -28}, {108, 108, 55}, {109, 122, 20}, },
            {{48, 104, -16}, {105, 105, 56}, {106, 122, 20}, },
            {{48, 111, -31}, {112, 112, 57}, {113, 122, 20}, },
            {{48, 90, -8}, {97, 98, 20}, {99, 99, 58}, {100, 122, 20}, },
            {{48, 111, -31}, {112, 112, 59}, {113, 122, 20}, },
            {{48, 90, -8}, {97, 114, 20}, {115, 115, 60}, {116, 122, 20}, },
            {{48, 100, -32}, {101, 101, 61}, {102, 122, 20}, },
            {{48, 119, -33}, {120, 120, 62}, {121, 122, 20}, },
            {{48, 109, -14}, {110, 110, 63}, {111, 122, 20}, },
            {{48, 110, -13}, {111, 111, 64}, {112, 122, 20}, },
            {{48, 113, -18}, {114, 114, 65}, {115, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 100, -32}, {101, 101, 66}, {102, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 122, -8}, },
            {{48, 122, -8}, },
            {{48, 122, -8}, },
            {{48, 100, -32}, {101, 101, 67}, {102, 122, 20}, },
            {{48, 57, 20}, {65, 69, 20}, {70, 70, 68}, {71, 83, 20}, {84, 84, 69}, {85, 85, 20}, {86, 86, 70}, {87, 122, -23}, },
            {{48, 57, 20}, {65, 65, 71}, {66, 67, 20}, {68, 68, 72}, {69, 69, 73}, {70, 70, 74}, {71, 72, 20}, {73, 73, 75}, {74, 75, 20}, {76, 76, 76}, {77, 77, 77}, {78, 78, 78}, {79, 79, 79}, {80, 82, 20}, {83, 83, 80}, {84, 85, 20}, {86, 86, 81}, {87, 122, -23}, },
            {{48, 115, -25}, {116, 116, 82}, {117, 122, 20}, },
            {{48, 98, -45}, {99, 99, 83}, {100, 122, 20}, },
            {{48, 111, -31}, {112, 112, 84}, {113, 122, 20}, },
            {{48, 114, -47}, {115, 115, 85}, {116, 122, 20}, },
            {{48, 90, -8}, {97, 102, 20}, {103, 103, 86}, {104, 122, 20}, },
            {{48, 57, 20}, {65, 72, 20}, {73, 73, 87}, {74, 82, 20}, {83, 83, 88}, {84, 90, 20}, {97, 122, 20}, },
            {{48, 113, -18}, {114, 114, 89}, {115, 122, 20}, },
            {{48, 107, -28}, {108, 108, 90}, {109, 122, 20}, },
            {{48, 110, -13}, {111, 111, 91}, {112, 122, 20}, },
            {{48, 90, -8}, {97, 97, 92}, {98, 122, 20}, },
            {{48, 90, -8}, {97, 97, 93}, {98, 122, 20}, },
            {{48, 90, -8}, {97, 99, 20}, {100, 100, 94}, {101, 109, 20}, {110, 110, 95}, {111, 111, 20}, {112, 112, 96}, {113, 122, 20}, },
            {{48, 104, -16}, {105, 105, 97}, {106, 122, 20}, },
            {{48, 90, -8}, {97, 112, 20}, {113, 113, 98}, {114, 122, 20}, },
            {{48, 90, -8}, {97, 97, 99}, {98, 122, 20}, },
            {{48, 109, -14}, {110, 110, 100}, {111, 122, 20}, },
            {{48, 104, -16}, {105, 105, 101}, {106, 122, 20}, },
            {{48, 116, -17}, {117, 117, 102}, {118, 122, 20}, },
            {{48, 110, -13}, {111, 111, 103}, {112, 122, 20}, },
            {{48, 113, -18}, {114, 114, 104}, {115, 122, 20}, },
            {{48, 116, -17}, {117, 117, 105}, {118, 122, 20}, },
            {{48, 90, -8}, {97, 97, 106}, {98, 113, 20}, {114, 114, 107}, {115, 122, 20}, },
            {{48, 57, 20}, {65, 65, 108}, {66, 66, 109}, {67, 68, 20}, {69, 69, 110}, {70, 81, 20}, {82, 82, 111}, {83, 83, 112}, {84, 84, 113}, {85, 90, 20}, {97, 122, 20}, },
            {{48, 69, -60}, {70, 70, 114}, {71, 85, 20}, {86, 86, 115}, {87, 122, -23}, },
            {{48, 122, -8}, },
            {{48, 115, -25}, {116, 116, 116}, {117, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 109, -14}, {110, 110, 117}, {111, 122, 20}, },
            {{48, 104, -16}, {105, 105, 118}, {106, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 122, -8}, },
            {{48, 109, -14}, {110, 110, 119}, {111, 122, 20}, },
            {{48, 90, -8}, {97, 97, 20}, {98, 98, 120}, {99, 122, 20}, },
            {{48, 113, -18}, {114, 114, 121}, {115, 122, 20}, },
            {{48, 99, -73}, {100, 100, 122}, {101, 122, 20}, },
            {{48, 99, -73}, {100, 100, 123}, {101, 122, 20}, },
            {{48, 111, -31}, {112, 112, 124}, {113, 122, 20}, },
            {{48, 90, -8}, {97, 117, 20}, {118, 118, 125}, {119, 122, 20}, },
            {{48, 116, -17}, {117, 117, 126}, {118, 122, 20}, },
            {{48, 116, -17}, {117, 117, 127}, {118, 122, 20}, },
            {{48, 90, -8}, {97, 101, 20}, {102, 102, 128}, {103, 115, 20}, {116, 116, 129}, {117, 122, 20}, },
            {{48, 113, -18}, {114, 114, 130}, {115, 122, 20}, },
            {{48, 107, -28}, {108, 108, 131}, {109, 122, 20}, },
            {{48, 115, -25}, {116, 116, 132}, {117, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 97, -94}, {98, 98, 133}, {99, 122, 20}, },
            {{48, 113, -18}, {114, 114, 134}, {115, 122, 20}, },
            {{48, 90, -8}, {97, 97, 135}, {98, 122, 20}, },
            {{48, 101, -102}, {102, 102, 136}, {103, 122, 20}, },
            {{48, 107, -28}, {108, 108, 137}, {109, 122, 20}, },
            {{48, 98, -45}, {99, 99, 138}, {100, 122, 20}, },
            {{48, 100, -32}, {101, 101, 139}, {102, 122, 20}, },
            {{48, 104, -16}, {105, 105, 140}, {106, 122, 20}, },
            {{48, 90, -8}, {97, 97, 141}, {98, 122, 20}, },
            {{48, 110, -13}, {111, 111, 142}, {112, 122, 20}, },
            {{48, 90, -8}, {97, 97, 143}, {98, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 99, -73}, {100, 100, 144}, {101, 122, 20}, },
            {{48, 90, -8}, {97, 108, 20}, {109, 109, 145}, {110, 122, 20}, },
            {{48, 98, -45}, {99, 99, 146}, {100, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 57, 20}, {65, 82, 20}, {83, 83, 147}, {84, 122, -67}, },
            {{48, 122, -8}, },
            {{48, 122, -8}, },
            {{48, 100, -32}, {101, 101, 148}, {102, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 90, -8}, {97, 97, 149}, {98, 122, 20}, },
            {{48, 119, -33}, {120, 120, 150}, {121, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 122, -8}, },
            {{48, 100, -32}, {101, 101, 151}, {102, 122, 20}, },
            {{48, 115, -25}, {116, 116, 152}, {117, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 122, -8}, },
            {{48, 122, -8}, },
            {{48, 104, -16}, {105, 105, 153}, {106, 122, 20}, },
            {{48, 101, -102}, {102, 102, 154}, {103, 122, 20}, },
            {{48, 110, -13}, {111, 111, 155}, {112, 122, 20}, },
            {{48, 113, -18}, {114, 114, 156}, {115, 122, 20}, },
            {{48, 115, -25}, {116, 116, 157}, {117, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 109, -14}, {110, 110, 158}, {111, 122, 20}, },
            {{48, 109, -14}, {110, 110, 159}, {111, 122, 20}, },
            {{48, 113, -18}, {114, 114, 160}, {115, 122, 20}, },
            {{48, 104, -16}, {105, 105, 161}, {106, 122, 20}, },
            {{48, 111, -31}, {112, 112, 162}, {113, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 104, -16}, {105, 105, 163}, {106, 122, 20}, },
            {{48, 107, -28}, {108, 108, 164}, {109, 122, 20}, },
            {{48, 107, -28}, {108, 108, 165}, {109, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 122, -8}, },
            {{48, 122, -8}, },
            {{48, 122, -8}, },
            {{48, 100, -32}, {101, 101, 166}, {102, 122, 20}, },
            {{48, 98, -45}, {99, 99, 167}, {100, 122, 20}, },
            {{48, 104, -16}, {105, 105, 168}, {106, 122, 20}, },
            {{48, 110, -13}, {111, 111, 169}, {112, 122, 20}, },
            {{48, 115, -25}, {116, 116, 170}, {117, 122, 20}, },
            {{48, 98, -45}, {99, 99, 171}, {100, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 98, -45}, {99, 99, 172}, {100, 122, 20}, },
            {{48, 107, -28}, {108, 108, 173}, {109, 122, 20}, },
            {{48, 108, -120}, {109, 109, 174}, {110, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 122, -8}, },
            {{48, 98, -45}, {99, 99, 175}, {100, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 115, -25}, {116, 116, 176}, {117, 122, 20}, },
            {{48, 116, -17}, {117, 117, 177}, {118, 122, 20}, },
            {{48, 57, 20}, {65, 80, 20}, {81, 81, 178}, {82, 90, 20}, {97, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 100, -32}, {101, 101, 179}, {102, 122, 20}, },
            {{48, 100, -32}, {101, 101, 180}, {102, 122, 20}, },
            {{48, 111, -31}, {112, 112, 181}, {113, 122, 20}, },
            {{48, 115, -25}, {116, 116, 182}, {117, 122, 20}, },
            {{48, 116, -17}, {117, 117, 183}, {118, 122, 20}, },
            {{48, 113, -18}, {114, 114, 184}, {115, 122, 20}, },
            {{48, 116, -17}, {117, 117, 185}, {118, 122, 20}, },
            {{48, 100, -32}, {101, 101, 186}, {102, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 107, -28}, {108, 108, 187}, {109, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 113, -18}, {114, 114, 188}, {115, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 100, -32}, {101, 101, 189}, {102, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 100, -32}, {101, 101, 190}, {102, 122, 20}, },
            {{48, 100, -32}, {101, 101, 191}, {102, 122, 20}, },
            {{48, 122, -8}, },
            {{48, 122, -8}, },
            {{48, 122, -8}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {-1, 0, 0, 0, 0, -1, 45, 2, 3, 44, 45, 45, 45, 45, 45, 45, 45, -1, 1, 1, 45, 45, 45, 45, 45, 45, 45, 45, 1, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 43, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 42, 45, 37, 39, 40, 38, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 32, 45, 34, 45, 45, 41, 4, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 20, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 33, 45, 45, 45, 6, 7, 9, 10, 45, 12, 45, 45, 15, 16, 45, 45, 19, 21, 22, 45, 45, 45, 45, 45, 28, 45, 45, 45, 45, 45, 5, 45, 45, 45, 14, 17, 18, 23, 45, 45, 45, 45, 45, 45, 31, 45, 45, 45, 11, 13, 45, 25, 45, 45, 45, 30, 45, 45, 45, 45, 45, 45, 45, 45, 36, 45, 24, 45, 27, 45, 35, 45, 45, 29, 8, 26, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
