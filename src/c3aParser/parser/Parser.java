/* This file was generated by SableCC (http://www.sablecc.org/). */

package c3aParser.parser;

import c3aParser.lexer.*;
import c3aParser.node.*;
import c3aParser.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList<Object> listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PProg node1 = (PProg) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce AProg */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list);
            }
            break;
            case 1: /* reduce ARecursifListeinst */
            {
                ArrayList<Object> list = new1();
                push(goTo(1), list);
            }
            break;
            case 2: /* reduce AFinalListeinst */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list);
            }
            break;
            case 3: /* reduce AAddInst */
            {
                ArrayList<Object> list = new3();
                push(goTo(2), list);
            }
            break;
            case 4: /* reduce ASubInst */
            {
                ArrayList<Object> list = new4();
                push(goTo(2), list);
            }
            break;
            case 5: /* reduce AMulInst */
            {
                ArrayList<Object> list = new5();
                push(goTo(2), list);
            }
            break;
            case 6: /* reduce ADivInst */
            {
                ArrayList<Object> list = new6();
                push(goTo(2), list);
            }
            break;
            case 7: /* reduce AAffInst */
            {
                ArrayList<Object> list = new7();
                push(goTo(2), list);
            }
            break;
            case 8: /* reduce AJmpInst */
            {
                ArrayList<Object> list = new8();
                push(goTo(2), list);
            }
            break;
            case 9: /* reduce AJmpegInst */
            {
                ArrayList<Object> list = new9();
                push(goTo(2), list);
            }
            break;
            case 10: /* reduce AJmpnegInst */
            {
                ArrayList<Object> list = new10();
                push(goTo(2), list);
            }
            break;
            case 11: /* reduce AJmpinfInst */
            {
                ArrayList<Object> list = new11();
                push(goTo(2), list);
            }
            break;
            case 12: /* reduce AJminfegInst */
            {
                ArrayList<Object> list = new12();
                push(goTo(2), list);
            }
            break;
            case 13: /* reduce AJmpsupInst */
            {
                ArrayList<Object> list = new13();
                push(goTo(2), list);
            }
            break;
            case 14: /* reduce AJmpsupegInst */
            {
                ArrayList<Object> list = new14();
                push(goTo(2), list);
            }
            break;
            case 15: /* reduce AFcallInst */
            {
                ArrayList<Object> list = new15();
                push(goTo(2), list);
            }
            break;
            case 16: /* reduce AIwriteInst */
            {
                ArrayList<Object> list = new16();
                push(goTo(2), list);
            }
            break;
            case 17: /* reduce AIreadInst */
            {
                ArrayList<Object> list = new17();
                push(goTo(2), list);
            }
            break;
            case 18: /* reduce AArgInst */
            {
                ArrayList<Object> list = new18();
                push(goTo(2), list);
            }
            break;
            case 19: /* reduce AReturnInst */
            {
                ArrayList<Object> list = new19();
                push(goTo(2), list);
            }
            break;
            case 20: /* reduce ABeginInst */
            {
                ArrayList<Object> list = new20();
                push(goTo(2), list);
            }
            break;
            case 21: /* reduce AEndInst */
            {
                ArrayList<Object> list = new21();
                push(goTo(2), list);
            }
            break;
            case 22: /* reduce AStopInst */
            {
                ArrayList<Object> list = new22();
                push(goTo(2), list);
            }
            break;
            case 23: /* reduce ACte1Add */
            {
                ArrayList<Object> list = new23();
                push(goTo(3), list);
            }
            break;
            case 24: /* reduce AVide1Add */
            {
                ArrayList<Object> list = new24();
                push(goTo(3), list);
            }
            break;
            case 25: /* reduce ACte1Sub */
            {
                ArrayList<Object> list = new25();
                push(goTo(4), list);
            }
            break;
            case 26: /* reduce AVide1Sub */
            {
                ArrayList<Object> list = new26();
                push(goTo(4), list);
            }
            break;
            case 27: /* reduce ACte1Mul */
            {
                ArrayList<Object> list = new27();
                push(goTo(5), list);
            }
            break;
            case 28: /* reduce AVide1Mul */
            {
                ArrayList<Object> list = new28();
                push(goTo(5), list);
            }
            break;
            case 29: /* reduce ACte1Div */
            {
                ArrayList<Object> list = new29();
                push(goTo(6), list);
            }
            break;
            case 30: /* reduce AVide1Div */
            {
                ArrayList<Object> list = new30();
                push(goTo(6), list);
            }
            break;
            case 31: /* reduce ACte1Affect */
            {
                ArrayList<Object> list = new31();
                push(goTo(7), list);
            }
            break;
            case 32: /* reduce AVide1Affect */
            {
                ArrayList<Object> list = new32();
                push(goTo(7), list);
            }
            break;
            case 33: /* reduce ACte1Jmpeg */
            {
                ArrayList<Object> list = new33();
                push(goTo(8), list);
            }
            break;
            case 34: /* reduce AVide1Jmpeg */
            {
                ArrayList<Object> list = new34();
                push(goTo(8), list);
            }
            break;
            case 35: /* reduce ACte1Jmpneg */
            {
                ArrayList<Object> list = new35();
                push(goTo(9), list);
            }
            break;
            case 36: /* reduce AVide1Jmpneg */
            {
                ArrayList<Object> list = new36();
                push(goTo(9), list);
            }
            break;
            case 37: /* reduce ACte1Jmpinf */
            {
                ArrayList<Object> list = new37();
                push(goTo(10), list);
            }
            break;
            case 38: /* reduce AVide1Jmpinf */
            {
                ArrayList<Object> list = new38();
                push(goTo(10), list);
            }
            break;
            case 39: /* reduce ACte1Jmpinfeg */
            {
                ArrayList<Object> list = new39();
                push(goTo(11), list);
            }
            break;
            case 40: /* reduce AVide1Jmpinfeg */
            {
                ArrayList<Object> list = new40();
                push(goTo(11), list);
            }
            break;
            case 41: /* reduce ACte1Jmpsup */
            {
                ArrayList<Object> list = new41();
                push(goTo(12), list);
            }
            break;
            case 42: /* reduce AVide1Jmpsup */
            {
                ArrayList<Object> list = new42();
                push(goTo(12), list);
            }
            break;
            case 43: /* reduce ACte1Jmpsupeg */
            {
                ArrayList<Object> list = new43();
                push(goTo(13), list);
            }
            break;
            case 44: /* reduce AVide1Jmpsupeg */
            {
                ArrayList<Object> list = new44();
                push(goTo(13), list);
            }
            break;
            case 45: /* reduce ACte1Jmp */
            {
                ArrayList<Object> list = new45();
                push(goTo(14), list);
            }
            break;
            case 46: /* reduce AVide1Jmp */
            {
                ArrayList<Object> list = new46();
                push(goTo(14), list);
            }
            break;
            case 47: /* reduce ABegin */
            {
                ArrayList<Object> list = new47();
                push(goTo(15), list);
            }
            break;
            case 48: /* reduce ACte1End */
            {
                ArrayList<Object> list = new48();
                push(goTo(16), list);
            }
            break;
            case 49: /* reduce AVide1End */
            {
                ArrayList<Object> list = new49();
                push(goTo(16), list);
            }
            break;
            case 50: /* reduce ACte1Fcall */
            {
                ArrayList<Object> list = new50();
                push(goTo(17), list);
            }
            break;
            case 51: /* reduce AVide1Fcall */
            {
                ArrayList<Object> list = new51();
                push(goTo(17), list);
            }
            break;
            case 52: /* reduce ACte1Iwrite */
            {
                ArrayList<Object> list = new52();
                push(goTo(18), list);
            }
            break;
            case 53: /* reduce AVide1Iwrite */
            {
                ArrayList<Object> list = new53();
                push(goTo(18), list);
            }
            break;
            case 54: /* reduce ACte1Iread */
            {
                ArrayList<Object> list = new54();
                push(goTo(19), list);
            }
            break;
            case 55: /* reduce AVide1Iread */
            {
                ArrayList<Object> list = new55();
                push(goTo(19), list);
            }
            break;
            case 56: /* reduce ACte1Arg */
            {
                ArrayList<Object> list = new56();
                push(goTo(20), list);
            }
            break;
            case 57: /* reduce AVide1Arg */
            {
                ArrayList<Object> list = new57();
                push(goTo(20), list);
            }
            break;
            case 58: /* reduce ACte1Return */
            {
                ArrayList<Object> list = new58();
                push(goTo(21), list);
            }
            break;
            case 59: /* reduce AVide1Return */
            {
                ArrayList<Object> list = new59();
                push(goTo(21), list);
            }
            break;
            case 60: /* reduce ACte1Istop */
            {
                ArrayList<Object> list = new60();
                push(goTo(22), list);
            }
            break;
            case 61: /* reduce AVide1Istop */
            {
                ArrayList<Object> list = new61();
                push(goTo(22), list);
            }
            break;
            case 62: /* reduce ACCtv */
            {
                ArrayList<Object> list = new62();
                push(goTo(23), list);
            }
            break;
            case 63: /* reduce ATCtv */
            {
                ArrayList<Object> list = new63();
                push(goTo(23), list);
            }
            break;
            case 64: /* reduce AVCtv */
            {
                ArrayList<Object> list = new64();
                push(goTo(23), list);
            }
            break;
            case 65: /* reduce ATTv */
            {
                ArrayList<Object> list = new65();
                push(goTo(24), list);
            }
            break;
            case 66: /* reduce AVTv */
            {
                ArrayList<Object> list = new66();
                push(goTo(24), list);
            }
            break;
            case 67: /* reduce AConstante */
            {
                ArrayList<Object> list = new67();
                push(goTo(25), list);
            }
            break;
            case 68: /* reduce ATemporaire */
            {
                ArrayList<Object> list = new68();
                push(goTo(26), list);
            }
            break;
            case 69: /* reduce AScalaireVariable */
            {
                ArrayList<Object> list = new69();
                push(goTo(27), list);
            }
            break;
            case 70: /* reduce ATabVariable */
            {
                ArrayList<Object> list = new70();
                push(goTo(27), list);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce AProg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PProg pprogNode1;
        {
            // Block
        PListeinst plisteinstNode2;
        plisteinstNode2 = (PListeinst)nodeArrayList1.get(0);

        pprogNode1 = new AProg(plisteinstNode2);
        }
	nodeList.add(pprogNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce ARecursifListeinst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListeinst plisteinstNode1;
        {
            // Block
        PInst pinstNode2;
        PListeinst plisteinstNode3;
        pinstNode2 = (PInst)nodeArrayList1.get(0);
        plisteinstNode3 = (PListeinst)nodeArrayList2.get(0);

        plisteinstNode1 = new ARecursifListeinst(pinstNode2, plisteinstNode3);
        }
	nodeList.add(plisteinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AFinalListeinst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListeinst plisteinstNode1;
        {
            // Block
        PInst pinstNode2;
        pinstNode2 = (PInst)nodeArrayList1.get(0);

        plisteinstNode1 = new AFinalListeinst(pinstNode2);
        }
	nodeList.add(plisteinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AAddInst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInst pinstNode1;
        {
            // Block
        PAdd paddNode2;
        paddNode2 = (PAdd)nodeArrayList1.get(0);

        pinstNode1 = new AAddInst(paddNode2);
        }
	nodeList.add(pinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce ASubInst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInst pinstNode1;
        {
            // Block
        PSub psubNode2;
        psubNode2 = (PSub)nodeArrayList1.get(0);

        pinstNode1 = new ASubInst(psubNode2);
        }
	nodeList.add(pinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce AMulInst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInst pinstNode1;
        {
            // Block
        PMul pmulNode2;
        pmulNode2 = (PMul)nodeArrayList1.get(0);

        pinstNode1 = new AMulInst(pmulNode2);
        }
	nodeList.add(pinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce ADivInst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInst pinstNode1;
        {
            // Block
        PDiv pdivNode2;
        pdivNode2 = (PDiv)nodeArrayList1.get(0);

        pinstNode1 = new ADivInst(pdivNode2);
        }
	nodeList.add(pinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce AAffInst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInst pinstNode1;
        {
            // Block
        PAffect paffectNode2;
        paffectNode2 = (PAffect)nodeArrayList1.get(0);

        pinstNode1 = new AAffInst(paffectNode2);
        }
	nodeList.add(pinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce AJmpInst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInst pinstNode1;
        {
            // Block
        PJmp pjmpNode2;
        pjmpNode2 = (PJmp)nodeArrayList1.get(0);

        pinstNode1 = new AJmpInst(pjmpNode2);
        }
	nodeList.add(pinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AJmpegInst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInst pinstNode1;
        {
            // Block
        PJmpeg pjmpegNode2;
        pjmpegNode2 = (PJmpeg)nodeArrayList1.get(0);

        pinstNode1 = new AJmpegInst(pjmpegNode2);
        }
	nodeList.add(pinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce AJmpnegInst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInst pinstNode1;
        {
            // Block
        PJmpneg pjmpnegNode2;
        pjmpnegNode2 = (PJmpneg)nodeArrayList1.get(0);

        pinstNode1 = new AJmpnegInst(pjmpnegNode2);
        }
	nodeList.add(pinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AJmpinfInst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInst pinstNode1;
        {
            // Block
        PJmpinf pjmpinfNode2;
        pjmpinfNode2 = (PJmpinf)nodeArrayList1.get(0);

        pinstNode1 = new AJmpinfInst(pjmpinfNode2);
        }
	nodeList.add(pinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AJminfegInst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInst pinstNode1;
        {
            // Block
        PJmpinfeg pjmpinfegNode2;
        pjmpinfegNode2 = (PJmpinfeg)nodeArrayList1.get(0);

        pinstNode1 = new AJminfegInst(pjmpinfegNode2);
        }
	nodeList.add(pinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AJmpsupInst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInst pinstNode1;
        {
            // Block
        PJmpsup pjmpsupNode2;
        pjmpsupNode2 = (PJmpsup)nodeArrayList1.get(0);

        pinstNode1 = new AJmpsupInst(pjmpsupNode2);
        }
	nodeList.add(pinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce AJmpsupegInst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInst pinstNode1;
        {
            // Block
        PJmpsupeg pjmpsupegNode2;
        pjmpsupegNode2 = (PJmpsupeg)nodeArrayList1.get(0);

        pinstNode1 = new AJmpsupegInst(pjmpsupegNode2);
        }
	nodeList.add(pinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AFcallInst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInst pinstNode1;
        {
            // Block
        PFcall pfcallNode2;
        pfcallNode2 = (PFcall)nodeArrayList1.get(0);

        pinstNode1 = new AFcallInst(pfcallNode2);
        }
	nodeList.add(pinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AIwriteInst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInst pinstNode1;
        {
            // Block
        PIwrite piwriteNode2;
        piwriteNode2 = (PIwrite)nodeArrayList1.get(0);

        pinstNode1 = new AIwriteInst(piwriteNode2);
        }
	nodeList.add(pinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AIreadInst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInst pinstNode1;
        {
            // Block
        PIread pireadNode2;
        pireadNode2 = (PIread)nodeArrayList1.get(0);

        pinstNode1 = new AIreadInst(pireadNode2);
        }
	nodeList.add(pinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AArgInst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInst pinstNode1;
        {
            // Block
        PArg pargNode2;
        pargNode2 = (PArg)nodeArrayList1.get(0);

        pinstNode1 = new AArgInst(pargNode2);
        }
	nodeList.add(pinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AReturnInst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInst pinstNode1;
        {
            // Block
        PReturn preturnNode2;
        preturnNode2 = (PReturn)nodeArrayList1.get(0);

        pinstNode1 = new AReturnInst(preturnNode2);
        }
	nodeList.add(pinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce ABeginInst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInst pinstNode1;
        {
            // Block
        PBegin pbeginNode2;
        pbeginNode2 = (PBegin)nodeArrayList1.get(0);

        pinstNode1 = new ABeginInst(pbeginNode2);
        }
	nodeList.add(pinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AEndInst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInst pinstNode1;
        {
            // Block
        PEnd pendNode2;
        pendNode2 = (PEnd)nodeArrayList1.get(0);

        pinstNode1 = new AEndInst(pendNode2);
        }
	nodeList.add(pinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AStopInst */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInst pinstNode1;
        {
            // Block
        PIstop pistopNode2;
        pistopNode2 = (PIstop)nodeArrayList1.get(0);

        pinstNode1 = new AStopInst(pistopNode2);
        }
	nodeList.add(pinstNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce ACte1Add */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAdd paddNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        PTv ptvNode4;
        TAff taffNode5;
        PCtv pctvNode6;
        TPlus tplusNode7;
        PCtv pctvNode8;
        {
            // Block
        TNombre tnombreNode3;
        tnombreNode3 = (TNombre)nodeArrayList1.get(0);

        petiqopNode2 = new ACteEtiqop(tnombreNode3);
        }
        ptvNode4 = (PTv)nodeArrayList2.get(0);
        taffNode5 = (TAff)nodeArrayList3.get(0);
        pctvNode6 = (PCtv)nodeArrayList4.get(0);
        tplusNode7 = (TPlus)nodeArrayList5.get(0);
        pctvNode8 = (PCtv)nodeArrayList6.get(0);

        paddNode1 = new AAdd(petiqopNode2, ptvNode4, taffNode5, pctvNode6, tplusNode7, pctvNode8);
        }
	nodeList.add(paddNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AVide1Add */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAdd paddNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        PTv ptvNode3;
        TAff taffNode4;
        PCtv pctvNode5;
        TPlus tplusNode6;
        PCtv pctvNode7;
        {
            // Block

        petiqopNode2 = new AVideEtiqop();
        }
        ptvNode3 = (PTv)nodeArrayList1.get(0);
        taffNode4 = (TAff)nodeArrayList2.get(0);
        pctvNode5 = (PCtv)nodeArrayList3.get(0);
        tplusNode6 = (TPlus)nodeArrayList4.get(0);
        pctvNode7 = (PCtv)nodeArrayList5.get(0);

        paddNode1 = new AAdd(petiqopNode2, ptvNode3, taffNode4, pctvNode5, tplusNode6, pctvNode7);
        }
	nodeList.add(paddNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce ACte1Sub */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSub psubNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        PTv ptvNode4;
        TAff taffNode5;
        PCtv pctvNode6;
        TMoins tmoinsNode7;
        PCtv pctvNode8;
        {
            // Block
        TNombre tnombreNode3;
        tnombreNode3 = (TNombre)nodeArrayList1.get(0);

        petiqopNode2 = new ACteEtiqop(tnombreNode3);
        }
        ptvNode4 = (PTv)nodeArrayList2.get(0);
        taffNode5 = (TAff)nodeArrayList3.get(0);
        pctvNode6 = (PCtv)nodeArrayList4.get(0);
        tmoinsNode7 = (TMoins)nodeArrayList5.get(0);
        pctvNode8 = (PCtv)nodeArrayList6.get(0);

        psubNode1 = new ASub(petiqopNode2, ptvNode4, taffNode5, pctvNode6, tmoinsNode7, pctvNode8);
        }
	nodeList.add(psubNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AVide1Sub */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSub psubNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        PTv ptvNode3;
        TAff taffNode4;
        PCtv pctvNode5;
        TMoins tmoinsNode6;
        PCtv pctvNode7;
        {
            // Block

        petiqopNode2 = new AVideEtiqop();
        }
        ptvNode3 = (PTv)nodeArrayList1.get(0);
        taffNode4 = (TAff)nodeArrayList2.get(0);
        pctvNode5 = (PCtv)nodeArrayList3.get(0);
        tmoinsNode6 = (TMoins)nodeArrayList4.get(0);
        pctvNode7 = (PCtv)nodeArrayList5.get(0);

        psubNode1 = new ASub(petiqopNode2, ptvNode3, taffNode4, pctvNode5, tmoinsNode6, pctvNode7);
        }
	nodeList.add(psubNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce ACte1Mul */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMul pmulNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        PTv ptvNode4;
        TAff taffNode5;
        PCtv pctvNode6;
        TFois tfoisNode7;
        PCtv pctvNode8;
        {
            // Block
        TNombre tnombreNode3;
        tnombreNode3 = (TNombre)nodeArrayList1.get(0);

        petiqopNode2 = new ACteEtiqop(tnombreNode3);
        }
        ptvNode4 = (PTv)nodeArrayList2.get(0);
        taffNode5 = (TAff)nodeArrayList3.get(0);
        pctvNode6 = (PCtv)nodeArrayList4.get(0);
        tfoisNode7 = (TFois)nodeArrayList5.get(0);
        pctvNode8 = (PCtv)nodeArrayList6.get(0);

        pmulNode1 = new AMul(petiqopNode2, ptvNode4, taffNode5, pctvNode6, tfoisNode7, pctvNode8);
        }
	nodeList.add(pmulNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AVide1Mul */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMul pmulNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        PTv ptvNode3;
        TAff taffNode4;
        PCtv pctvNode5;
        TFois tfoisNode6;
        PCtv pctvNode7;
        {
            // Block

        petiqopNode2 = new AVideEtiqop();
        }
        ptvNode3 = (PTv)nodeArrayList1.get(0);
        taffNode4 = (TAff)nodeArrayList2.get(0);
        pctvNode5 = (PCtv)nodeArrayList3.get(0);
        tfoisNode6 = (TFois)nodeArrayList4.get(0);
        pctvNode7 = (PCtv)nodeArrayList5.get(0);

        pmulNode1 = new AMul(petiqopNode2, ptvNode3, taffNode4, pctvNode5, tfoisNode6, pctvNode7);
        }
	nodeList.add(pmulNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce ACte1Div */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDiv pdivNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        PTv ptvNode4;
        TAff taffNode5;
        PCtv pctvNode6;
        TDivise tdiviseNode7;
        PCtv pctvNode8;
        {
            // Block
        TNombre tnombreNode3;
        tnombreNode3 = (TNombre)nodeArrayList1.get(0);

        petiqopNode2 = new ACteEtiqop(tnombreNode3);
        }
        ptvNode4 = (PTv)nodeArrayList2.get(0);
        taffNode5 = (TAff)nodeArrayList3.get(0);
        pctvNode6 = (PCtv)nodeArrayList4.get(0);
        tdiviseNode7 = (TDivise)nodeArrayList5.get(0);
        pctvNode8 = (PCtv)nodeArrayList6.get(0);

        pdivNode1 = new ADiv(petiqopNode2, ptvNode4, taffNode5, pctvNode6, tdiviseNode7, pctvNode8);
        }
	nodeList.add(pdivNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AVide1Div */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDiv pdivNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        PTv ptvNode3;
        TAff taffNode4;
        PCtv pctvNode5;
        TDivise tdiviseNode6;
        PCtv pctvNode7;
        {
            // Block

        petiqopNode2 = new AVideEtiqop();
        }
        ptvNode3 = (PTv)nodeArrayList1.get(0);
        taffNode4 = (TAff)nodeArrayList2.get(0);
        pctvNode5 = (PCtv)nodeArrayList3.get(0);
        tdiviseNode6 = (TDivise)nodeArrayList4.get(0);
        pctvNode7 = (PCtv)nodeArrayList5.get(0);

        pdivNode1 = new ADiv(petiqopNode2, ptvNode3, taffNode4, pctvNode5, tdiviseNode6, pctvNode7);
        }
	nodeList.add(pdivNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce ACte1Affect */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAffect paffectNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        PTv ptvNode4;
        TAff taffNode5;
        PCtv pctvNode6;
        {
            // Block
        TNombre tnombreNode3;
        tnombreNode3 = (TNombre)nodeArrayList1.get(0);

        petiqopNode2 = new ACteEtiqop(tnombreNode3);
        }
        ptvNode4 = (PTv)nodeArrayList2.get(0);
        taffNode5 = (TAff)nodeArrayList3.get(0);
        pctvNode6 = (PCtv)nodeArrayList4.get(0);

        paffectNode1 = new AAffect(petiqopNode2, ptvNode4, taffNode5, pctvNode6);
        }
	nodeList.add(paffectNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AVide1Affect */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PAffect paffectNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        PTv ptvNode3;
        TAff taffNode4;
        PCtv pctvNode5;
        {
            // Block

        petiqopNode2 = new AVideEtiqop();
        }
        ptvNode3 = (PTv)nodeArrayList1.get(0);
        taffNode4 = (TAff)nodeArrayList2.get(0);
        pctvNode5 = (PCtv)nodeArrayList3.get(0);

        paffectNode1 = new AAffect(petiqopNode2, ptvNode3, taffNode4, pctvNode5);
        }
	nodeList.add(paffectNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce ACte1Jmpeg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PJmpeg pjmpegNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TIf tifNode4;
        PCtv pctvNode5;
        TEq teqNode6;
        PCtv pctvNode7;
        TGoto tgotoNode8;
        PConstante pconstanteNode9;
        {
            // Block
        TNombre tnombreNode3;
        tnombreNode3 = (TNombre)nodeArrayList1.get(0);

        petiqopNode2 = new ACteEtiqop(tnombreNode3);
        }
        tifNode4 = (TIf)nodeArrayList2.get(0);
        pctvNode5 = (PCtv)nodeArrayList3.get(0);
        teqNode6 = (TEq)nodeArrayList4.get(0);
        pctvNode7 = (PCtv)nodeArrayList5.get(0);
        tgotoNode8 = (TGoto)nodeArrayList6.get(0);
        pconstanteNode9 = (PConstante)nodeArrayList7.get(0);

        pjmpegNode1 = new AJmpeg(petiqopNode2, tifNode4, pctvNode5, teqNode6, pctvNode7, tgotoNode8, pconstanteNode9);
        }
	nodeList.add(pjmpegNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce AVide1Jmpeg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PJmpeg pjmpegNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TIf tifNode3;
        PCtv pctvNode4;
        TEq teqNode5;
        PCtv pctvNode6;
        TGoto tgotoNode7;
        PConstante pconstanteNode8;
        {
            // Block

        petiqopNode2 = new AVideEtiqop();
        }
        tifNode3 = (TIf)nodeArrayList1.get(0);
        pctvNode4 = (PCtv)nodeArrayList2.get(0);
        teqNode5 = (TEq)nodeArrayList3.get(0);
        pctvNode6 = (PCtv)nodeArrayList4.get(0);
        tgotoNode7 = (TGoto)nodeArrayList5.get(0);
        pconstanteNode8 = (PConstante)nodeArrayList6.get(0);

        pjmpegNode1 = new AJmpeg(petiqopNode2, tifNode3, pctvNode4, teqNode5, pctvNode6, tgotoNode7, pconstanteNode8);
        }
	nodeList.add(pjmpegNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce ACte1Jmpneg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PJmpneg pjmpnegNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TIf tifNode4;
        PCtv pctvNode5;
        TNoteq tnoteqNode6;
        PCtv pctvNode7;
        TGoto tgotoNode8;
        PConstante pconstanteNode9;
        {
            // Block
        TNombre tnombreNode3;
        tnombreNode3 = (TNombre)nodeArrayList1.get(0);

        petiqopNode2 = new ACteEtiqop(tnombreNode3);
        }
        tifNode4 = (TIf)nodeArrayList2.get(0);
        pctvNode5 = (PCtv)nodeArrayList3.get(0);
        tnoteqNode6 = (TNoteq)nodeArrayList4.get(0);
        pctvNode7 = (PCtv)nodeArrayList5.get(0);
        tgotoNode8 = (TGoto)nodeArrayList6.get(0);
        pconstanteNode9 = (PConstante)nodeArrayList7.get(0);

        pjmpnegNode1 = new AJmpneg(petiqopNode2, tifNode4, pctvNode5, tnoteqNode6, pctvNode7, tgotoNode8, pconstanteNode9);
        }
	nodeList.add(pjmpnegNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AVide1Jmpneg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PJmpneg pjmpnegNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TIf tifNode3;
        PCtv pctvNode4;
        TNoteq tnoteqNode5;
        PCtv pctvNode6;
        TGoto tgotoNode7;
        PConstante pconstanteNode8;
        {
            // Block

        petiqopNode2 = new AVideEtiqop();
        }
        tifNode3 = (TIf)nodeArrayList1.get(0);
        pctvNode4 = (PCtv)nodeArrayList2.get(0);
        tnoteqNode5 = (TNoteq)nodeArrayList3.get(0);
        pctvNode6 = (PCtv)nodeArrayList4.get(0);
        tgotoNode7 = (TGoto)nodeArrayList5.get(0);
        pconstanteNode8 = (PConstante)nodeArrayList6.get(0);

        pjmpnegNode1 = new AJmpneg(petiqopNode2, tifNode3, pctvNode4, tnoteqNode5, pctvNode6, tgotoNode7, pconstanteNode8);
        }
	nodeList.add(pjmpnegNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce ACte1Jmpinf */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PJmpinf pjmpinfNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TIf tifNode4;
        PCtv pctvNode5;
        TInf tinfNode6;
        PCtv pctvNode7;
        TGoto tgotoNode8;
        PConstante pconstanteNode9;
        {
            // Block
        TNombre tnombreNode3;
        tnombreNode3 = (TNombre)nodeArrayList1.get(0);

        petiqopNode2 = new ACteEtiqop(tnombreNode3);
        }
        tifNode4 = (TIf)nodeArrayList2.get(0);
        pctvNode5 = (PCtv)nodeArrayList3.get(0);
        tinfNode6 = (TInf)nodeArrayList4.get(0);
        pctvNode7 = (PCtv)nodeArrayList5.get(0);
        tgotoNode8 = (TGoto)nodeArrayList6.get(0);
        pconstanteNode9 = (PConstante)nodeArrayList7.get(0);

        pjmpinfNode1 = new AJmpinf(petiqopNode2, tifNode4, pctvNode5, tinfNode6, pctvNode7, tgotoNode8, pconstanteNode9);
        }
	nodeList.add(pjmpinfNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AVide1Jmpinf */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PJmpinf pjmpinfNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TIf tifNode3;
        PCtv pctvNode4;
        TInf tinfNode5;
        PCtv pctvNode6;
        TGoto tgotoNode7;
        PConstante pconstanteNode8;
        {
            // Block

        petiqopNode2 = new AVideEtiqop();
        }
        tifNode3 = (TIf)nodeArrayList1.get(0);
        pctvNode4 = (PCtv)nodeArrayList2.get(0);
        tinfNode5 = (TInf)nodeArrayList3.get(0);
        pctvNode6 = (PCtv)nodeArrayList4.get(0);
        tgotoNode7 = (TGoto)nodeArrayList5.get(0);
        pconstanteNode8 = (PConstante)nodeArrayList6.get(0);

        pjmpinfNode1 = new AJmpinf(petiqopNode2, tifNode3, pctvNode4, tinfNode5, pctvNode6, tgotoNode7, pconstanteNode8);
        }
	nodeList.add(pjmpinfNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce ACte1Jmpinfeg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PJmpinfeg pjmpinfegNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TIf tifNode4;
        PCtv pctvNode5;
        TInfeq tinfeqNode6;
        PCtv pctvNode7;
        TGoto tgotoNode8;
        PConstante pconstanteNode9;
        {
            // Block
        TNombre tnombreNode3;
        tnombreNode3 = (TNombre)nodeArrayList1.get(0);

        petiqopNode2 = new ACteEtiqop(tnombreNode3);
        }
        tifNode4 = (TIf)nodeArrayList2.get(0);
        pctvNode5 = (PCtv)nodeArrayList3.get(0);
        tinfeqNode6 = (TInfeq)nodeArrayList4.get(0);
        pctvNode7 = (PCtv)nodeArrayList5.get(0);
        tgotoNode8 = (TGoto)nodeArrayList6.get(0);
        pconstanteNode9 = (PConstante)nodeArrayList7.get(0);

        pjmpinfegNode1 = new AJmpinfeg(petiqopNode2, tifNode4, pctvNode5, tinfeqNode6, pctvNode7, tgotoNode8, pconstanteNode9);
        }
	nodeList.add(pjmpinfegNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce AVide1Jmpinfeg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PJmpinfeg pjmpinfegNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TIf tifNode3;
        PCtv pctvNode4;
        TInfeq tinfeqNode5;
        PCtv pctvNode6;
        TGoto tgotoNode7;
        PConstante pconstanteNode8;
        {
            // Block

        petiqopNode2 = new AVideEtiqop();
        }
        tifNode3 = (TIf)nodeArrayList1.get(0);
        pctvNode4 = (PCtv)nodeArrayList2.get(0);
        tinfeqNode5 = (TInfeq)nodeArrayList3.get(0);
        pctvNode6 = (PCtv)nodeArrayList4.get(0);
        tgotoNode7 = (TGoto)nodeArrayList5.get(0);
        pconstanteNode8 = (PConstante)nodeArrayList6.get(0);

        pjmpinfegNode1 = new AJmpinfeg(petiqopNode2, tifNode3, pctvNode4, tinfeqNode5, pctvNode6, tgotoNode7, pconstanteNode8);
        }
	nodeList.add(pjmpinfegNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce ACte1Jmpsup */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PJmpsup pjmpsupNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TIf tifNode4;
        PCtv pctvNode5;
        TSup tsupNode6;
        PCtv pctvNode7;
        TGoto tgotoNode8;
        PConstante pconstanteNode9;
        {
            // Block
        TNombre tnombreNode3;
        tnombreNode3 = (TNombre)nodeArrayList1.get(0);

        petiqopNode2 = new ACteEtiqop(tnombreNode3);
        }
        tifNode4 = (TIf)nodeArrayList2.get(0);
        pctvNode5 = (PCtv)nodeArrayList3.get(0);
        tsupNode6 = (TSup)nodeArrayList4.get(0);
        pctvNode7 = (PCtv)nodeArrayList5.get(0);
        tgotoNode8 = (TGoto)nodeArrayList6.get(0);
        pconstanteNode9 = (PConstante)nodeArrayList7.get(0);

        pjmpsupNode1 = new AJmpsup(petiqopNode2, tifNode4, pctvNode5, tsupNode6, pctvNode7, tgotoNode8, pconstanteNode9);
        }
	nodeList.add(pjmpsupNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce AVide1Jmpsup */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PJmpsup pjmpsupNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TIf tifNode3;
        PCtv pctvNode4;
        TSup tsupNode5;
        PCtv pctvNode6;
        TGoto tgotoNode7;
        PConstante pconstanteNode8;
        {
            // Block

        petiqopNode2 = new AVideEtiqop();
        }
        tifNode3 = (TIf)nodeArrayList1.get(0);
        pctvNode4 = (PCtv)nodeArrayList2.get(0);
        tsupNode5 = (TSup)nodeArrayList3.get(0);
        pctvNode6 = (PCtv)nodeArrayList4.get(0);
        tgotoNode7 = (TGoto)nodeArrayList5.get(0);
        pconstanteNode8 = (PConstante)nodeArrayList6.get(0);

        pjmpsupNode1 = new AJmpsup(petiqopNode2, tifNode3, pctvNode4, tsupNode5, pctvNode6, tgotoNode7, pconstanteNode8);
        }
	nodeList.add(pjmpsupNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce ACte1Jmpsupeg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PJmpsupeg pjmpsupegNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TIf tifNode4;
        PCtv pctvNode5;
        TSupeq tsupeqNode6;
        PCtv pctvNode7;
        TGoto tgotoNode8;
        PConstante pconstanteNode9;
        {
            // Block
        TNombre tnombreNode3;
        tnombreNode3 = (TNombre)nodeArrayList1.get(0);

        petiqopNode2 = new ACteEtiqop(tnombreNode3);
        }
        tifNode4 = (TIf)nodeArrayList2.get(0);
        pctvNode5 = (PCtv)nodeArrayList3.get(0);
        tsupeqNode6 = (TSupeq)nodeArrayList4.get(0);
        pctvNode7 = (PCtv)nodeArrayList5.get(0);
        tgotoNode8 = (TGoto)nodeArrayList6.get(0);
        pconstanteNode9 = (PConstante)nodeArrayList7.get(0);

        pjmpsupegNode1 = new AJmpsupeg(petiqopNode2, tifNode4, pctvNode5, tsupeqNode6, pctvNode7, tgotoNode8, pconstanteNode9);
        }
	nodeList.add(pjmpsupegNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce AVide1Jmpsupeg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PJmpsupeg pjmpsupegNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TIf tifNode3;
        PCtv pctvNode4;
        TSupeq tsupeqNode5;
        PCtv pctvNode6;
        TGoto tgotoNode7;
        PConstante pconstanteNode8;
        {
            // Block

        petiqopNode2 = new AVideEtiqop();
        }
        tifNode3 = (TIf)nodeArrayList1.get(0);
        pctvNode4 = (PCtv)nodeArrayList2.get(0);
        tsupeqNode5 = (TSupeq)nodeArrayList3.get(0);
        pctvNode6 = (PCtv)nodeArrayList4.get(0);
        tgotoNode7 = (TGoto)nodeArrayList5.get(0);
        pconstanteNode8 = (PConstante)nodeArrayList6.get(0);

        pjmpsupegNode1 = new AJmpsupeg(petiqopNode2, tifNode3, pctvNode4, tsupeqNode5, pctvNode6, tgotoNode7, pconstanteNode8);
        }
	nodeList.add(pjmpsupegNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce ACte1Jmp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PJmp pjmpNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TGoto tgotoNode4;
        PConstante pconstanteNode5;
        {
            // Block
        TNombre tnombreNode3;
        tnombreNode3 = (TNombre)nodeArrayList1.get(0);

        petiqopNode2 = new ACteEtiqop(tnombreNode3);
        }
        tgotoNode4 = (TGoto)nodeArrayList2.get(0);
        pconstanteNode5 = (PConstante)nodeArrayList3.get(0);

        pjmpNode1 = new AJmp(petiqopNode2, tgotoNode4, pconstanteNode5);
        }
	nodeList.add(pjmpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce AVide1Jmp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PJmp pjmpNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TGoto tgotoNode3;
        PConstante pconstanteNode4;
        {
            // Block

        petiqopNode2 = new AVideEtiqop();
        }
        tgotoNode3 = (TGoto)nodeArrayList1.get(0);
        pconstanteNode4 = (PConstante)nodeArrayList2.get(0);

        pjmpNode1 = new AJmp(petiqopNode2, tgotoNode3, pconstanteNode4);
        }
	nodeList.add(pjmpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce ABegin */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBegin pbeginNode1;
        {
            // Block
        TIdentif tidentifNode2;
        TFbegin tfbeginNode3;
        tidentifNode2 = (TIdentif)nodeArrayList1.get(0);
        tfbeginNode3 = (TFbegin)nodeArrayList2.get(0);

        pbeginNode1 = new ABegin(tidentifNode2, tfbeginNode3);
        }
	nodeList.add(pbeginNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce ACte1End */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEnd pendNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TFend tfendNode4;
        {
            // Block
        TNombre tnombreNode3;
        tnombreNode3 = (TNombre)nodeArrayList1.get(0);

        petiqopNode2 = new ACteEtiqop(tnombreNode3);
        }
        tfendNode4 = (TFend)nodeArrayList2.get(0);

        pendNode1 = new AEnd(petiqopNode2, tfendNode4);
        }
	nodeList.add(pendNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AVide1End */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEnd pendNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TFend tfendNode3;
        {
            // Block

        petiqopNode2 = new AVideEtiqop();
        }
        tfendNode3 = (TFend)nodeArrayList1.get(0);

        pendNode1 = new AEnd(petiqopNode2, tfendNode3);
        }
	nodeList.add(pendNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce ACte1Fcall */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFcall pfcallNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        PTv ptvNode4;
        TAff taffNode5;
        TCall tcallNode6;
        TIdentif tidentifNode7;
        {
            // Block
        TNombre tnombreNode3;
        tnombreNode3 = (TNombre)nodeArrayList1.get(0);

        petiqopNode2 = new ACteEtiqop(tnombreNode3);
        }
        ptvNode4 = (PTv)nodeArrayList2.get(0);
        taffNode5 = (TAff)nodeArrayList3.get(0);
        tcallNode6 = (TCall)nodeArrayList4.get(0);
        tidentifNode7 = (TIdentif)nodeArrayList5.get(0);

        pfcallNode1 = new AFcall(petiqopNode2, ptvNode4, taffNode5, tcallNode6, tidentifNode7);
        }
	nodeList.add(pfcallNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce AVide1Fcall */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFcall pfcallNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        PTv ptvNode3;
        TAff taffNode4;
        TCall tcallNode5;
        TIdentif tidentifNode6;
        {
            // Block

        petiqopNode2 = new AVideEtiqop();
        }
        ptvNode3 = (PTv)nodeArrayList1.get(0);
        taffNode4 = (TAff)nodeArrayList2.get(0);
        tcallNode5 = (TCall)nodeArrayList3.get(0);
        tidentifNode6 = (TIdentif)nodeArrayList4.get(0);

        pfcallNode1 = new AFcall(petiqopNode2, ptvNode3, taffNode4, tcallNode5, tidentifNode6);
        }
	nodeList.add(pfcallNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce ACte1Iwrite */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIwrite piwriteNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TWrite twriteNode4;
        PCtv pctvNode5;
        {
            // Block
        TNombre tnombreNode3;
        tnombreNode3 = (TNombre)nodeArrayList1.get(0);

        petiqopNode2 = new ACteEtiqop(tnombreNode3);
        }
        twriteNode4 = (TWrite)nodeArrayList2.get(0);
        pctvNode5 = (PCtv)nodeArrayList3.get(0);

        piwriteNode1 = new AIwrite(petiqopNode2, twriteNode4, pctvNode5);
        }
	nodeList.add(piwriteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AVide1Iwrite */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIwrite piwriteNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TWrite twriteNode3;
        PCtv pctvNode4;
        {
            // Block

        petiqopNode2 = new AVideEtiqop();
        }
        twriteNode3 = (TWrite)nodeArrayList1.get(0);
        pctvNode4 = (PCtv)nodeArrayList2.get(0);

        piwriteNode1 = new AIwrite(petiqopNode2, twriteNode3, pctvNode4);
        }
	nodeList.add(piwriteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce ACte1Iread */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIread pireadNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        PTv ptvNode4;
        TAff taffNode5;
        TRead treadNode6;
        {
            // Block
        TNombre tnombreNode3;
        tnombreNode3 = (TNombre)nodeArrayList1.get(0);

        petiqopNode2 = new ACteEtiqop(tnombreNode3);
        }
        ptvNode4 = (PTv)nodeArrayList2.get(0);
        taffNode5 = (TAff)nodeArrayList3.get(0);
        treadNode6 = (TRead)nodeArrayList4.get(0);

        pireadNode1 = new AIread(petiqopNode2, ptvNode4, taffNode5, treadNode6);
        }
	nodeList.add(pireadNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce AVide1Iread */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIread pireadNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        PTv ptvNode3;
        TAff taffNode4;
        TRead treadNode5;
        {
            // Block

        petiqopNode2 = new AVideEtiqop();
        }
        ptvNode3 = (PTv)nodeArrayList1.get(0);
        taffNode4 = (TAff)nodeArrayList2.get(0);
        treadNode5 = (TRead)nodeArrayList3.get(0);

        pireadNode1 = new AIread(petiqopNode2, ptvNode3, taffNode4, treadNode5);
        }
	nodeList.add(pireadNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce ACte1Arg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PArg pargNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TParam tparamNode4;
        PCtv pctvNode5;
        {
            // Block
        TNombre tnombreNode3;
        tnombreNode3 = (TNombre)nodeArrayList1.get(0);

        petiqopNode2 = new ACteEtiqop(tnombreNode3);
        }
        tparamNode4 = (TParam)nodeArrayList2.get(0);
        pctvNode5 = (PCtv)nodeArrayList3.get(0);

        pargNode1 = new AArg(petiqopNode2, tparamNode4, pctvNode5);
        }
	nodeList.add(pargNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AVide1Arg */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PArg pargNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TParam tparamNode3;
        PCtv pctvNode4;
        {
            // Block

        petiqopNode2 = new AVideEtiqop();
        }
        tparamNode3 = (TParam)nodeArrayList1.get(0);
        pctvNode4 = (PCtv)nodeArrayList2.get(0);

        pargNode1 = new AArg(petiqopNode2, tparamNode3, pctvNode4);
        }
	nodeList.add(pargNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce ACte1Return */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PReturn preturnNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TRet tretNode4;
        PCtv pctvNode5;
        {
            // Block
        TNombre tnombreNode3;
        tnombreNode3 = (TNombre)nodeArrayList1.get(0);

        petiqopNode2 = new ACteEtiqop(tnombreNode3);
        }
        tretNode4 = (TRet)nodeArrayList2.get(0);
        pctvNode5 = (PCtv)nodeArrayList3.get(0);

        preturnNode1 = new AReturn(petiqopNode2, tretNode4, pctvNode5);
        }
	nodeList.add(preturnNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AVide1Return */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PReturn preturnNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TRet tretNode3;
        PCtv pctvNode4;
        {
            // Block

        petiqopNode2 = new AVideEtiqop();
        }
        tretNode3 = (TRet)nodeArrayList1.get(0);
        pctvNode4 = (PCtv)nodeArrayList2.get(0);

        preturnNode1 = new AReturn(petiqopNode2, tretNode3, pctvNode4);
        }
	nodeList.add(preturnNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce ACte1Istop */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIstop pistopNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TStop tstopNode4;
        PCtv pctvNode5;
        {
            // Block
        TNombre tnombreNode3;
        tnombreNode3 = (TNombre)nodeArrayList1.get(0);

        petiqopNode2 = new ACteEtiqop(tnombreNode3);
        }
        tstopNode4 = (TStop)nodeArrayList2.get(0);
        pctvNode5 = (PCtv)nodeArrayList3.get(0);

        pistopNode1 = new AIstop(petiqopNode2, tstopNode4, pctvNode5);
        }
	nodeList.add(pistopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AVide1Istop */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIstop pistopNode1;
        {
            // Block
        PEtiqop petiqopNode2;
        TStop tstopNode3;
        PCtv pctvNode4;
        {
            // Block

        petiqopNode2 = new AVideEtiqop();
        }
        tstopNode3 = (TStop)nodeArrayList1.get(0);
        pctvNode4 = (PCtv)nodeArrayList2.get(0);

        pistopNode1 = new AIstop(petiqopNode2, tstopNode3, pctvNode4);
        }
	nodeList.add(pistopNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce ACCtv */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCtv pctvNode1;
        {
            // Block
        PConstante pconstanteNode2;
        pconstanteNode2 = (PConstante)nodeArrayList1.get(0);

        pctvNode1 = new ACCtv(pconstanteNode2);
        }
	nodeList.add(pctvNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce ATCtv */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCtv pctvNode1;
        {
            // Block
        PTemporaire ptemporaireNode2;
        ptemporaireNode2 = (PTemporaire)nodeArrayList1.get(0);

        pctvNode1 = new ATCtv(ptemporaireNode2);
        }
	nodeList.add(pctvNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce AVCtv */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PCtv pctvNode1;
        {
            // Block
        PVariable pvariableNode2;
        pvariableNode2 = (PVariable)nodeArrayList1.get(0);

        pctvNode1 = new AVCtv(pvariableNode2);
        }
	nodeList.add(pctvNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce ATTv */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTv ptvNode1;
        {
            // Block
        PTemporaire ptemporaireNode2;
        ptemporaireNode2 = (PTemporaire)nodeArrayList1.get(0);

        ptvNode1 = new ATTv(ptemporaireNode2);
        }
	nodeList.add(ptvNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce AVTv */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTv ptvNode1;
        {
            // Block
        PVariable pvariableNode2;
        pvariableNode2 = (PVariable)nodeArrayList1.get(0);

        ptvNode1 = new AVTv(pvariableNode2);
        }
	nodeList.add(ptvNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce AConstante */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PConstante pconstanteNode1;
        {
            // Block
        TNombre tnombreNode2;
        tnombreNode2 = (TNombre)nodeArrayList1.get(0);

        pconstanteNode1 = new AConstante(tnombreNode2);
        }
	nodeList.add(pconstanteNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce ATemporaire */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTemporaire ptemporaireNode1;
        {
            // Block
        TPrefixeTemp tprefixetempNode2;
        TNombre tnombreNode3;
        tprefixetempNode2 = (TPrefixeTemp)nodeArrayList1.get(0);
        tnombreNode3 = (TNombre)nodeArrayList2.get(0);

        ptemporaireNode1 = new ATemporaire(tprefixetempNode2, tnombreNode3);
        }
	nodeList.add(ptemporaireNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce AScalaireVariable */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariable pvariableNode1;
        {
            // Block
        TIdentif tidentifNode2;
        tidentifNode2 = (TIdentif)nodeArrayList1.get(0);

        pvariableNode1 = new AScalaireVariable(tidentifNode2);
        }
	nodeList.add(pvariableNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce ATabVariable */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariable pvariableNode1;
        {
            // Block
        TIdentif tidentifNode2;
        TCo tcoNode3;
        PCtv pctvNode4;
        TCf tcfNode5;
        tidentifNode2 = (TIdentif)nodeArrayList1.get(0);
        tcoNode3 = (TCo)nodeArrayList2.get(0);
        pctvNode4 = (PCtv)nodeArrayList3.get(0);
        tcfNode5 = (TCf)nodeArrayList4.get(0);

        pvariableNode1 = new ATabVariable(tidentifNode2, tcoNode3, pctvNode4, tcfNode5);
        }
	nodeList.add(pvariableNode1);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {3, SHIFT, 1}, {5, SHIFT, 2}, {13, SHIFT, 3}, {14, SHIFT, 4}, {15, SHIFT, 5}, {16, SHIFT, 6}, {21, SHIFT, 7}, {23, SHIFT, 8}, {24, SHIFT, 9}, {25, SHIFT, 10}, },
			{{-1, ERROR, 1}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, REDUCE, 49}, },
			{{-1, ERROR, 3}, {23, SHIFT, 37}, },
			{{-1, ERROR, 4}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 5}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 6}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 7}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 8}, {3, SHIFT, 48}, {5, SHIFT, 49}, {13, SHIFT, 50}, {14, SHIFT, 51}, {15, SHIFT, 52}, {16, SHIFT, 53}, {21, SHIFT, 54}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 9}, {23, SHIFT, 56}, },
			{{-1, REDUCE, 69}, {0, SHIFT, 57}, {4, SHIFT, 58}, },
			{{-1, ERROR, 11}, {26, ACCEPT, -1}, },
			{{-1, REDUCE, 0}, },
			{{-1, REDUCE, 2}, {3, SHIFT, 1}, {5, SHIFT, 2}, {13, SHIFT, 3}, {14, SHIFT, 4}, {15, SHIFT, 5}, {16, SHIFT, 6}, {21, SHIFT, 7}, {23, SHIFT, 8}, {24, SHIFT, 9}, {25, SHIFT, 10}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 4}, },
			{{-1, REDUCE, 5}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 7}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 10}, },
			{{-1, REDUCE, 11}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 20}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 15}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 18}, },
			{{-1, REDUCE, 19}, },
			{{-1, REDUCE, 22}, },
			{{-1, ERROR, 34}, {6, SHIFT, 60}, },
			{{-1, REDUCE, 65}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 67}, },
			{{-1, REDUCE, 69}, {0, SHIFT, 57}, },
			{{-1, REDUCE, 61}, },
			{{-1, REDUCE, 62}, },
			{{-1, REDUCE, 63}, },
			{{-1, REDUCE, 64}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 57}, },
			{{-1, REDUCE, 59}, },
			{{-1, ERROR, 46}, {7, SHIFT, 61}, {8, SHIFT, 62}, {9, SHIFT, 63}, {10, SHIFT, 64}, {11, SHIFT, 65}, {12, SHIFT, 66}, },
			{{-1, REDUCE, 53}, },
			{{-1, ERROR, 48}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, REDUCE, 48}, },
			{{-1, ERROR, 50}, {23, SHIFT, 37}, },
			{{-1, ERROR, 51}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 52}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 53}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 54}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 55}, {6, SHIFT, 73}, },
			{{-1, REDUCE, 68}, },
			{{-1, ERROR, 57}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, REDUCE, 47}, },
			{{-1, REDUCE, 1}, },
			{{-1, ERROR, 60}, {2, SHIFT, 75}, {22, SHIFT, 76}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 61}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 62}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 63}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 64}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 65}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 66}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, REDUCE, 60}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 56}, },
			{{-1, REDUCE, 58}, },
			{{-1, ERROR, 71}, {7, SHIFT, 84}, {8, SHIFT, 85}, {9, SHIFT, 86}, {10, SHIFT, 87}, {11, SHIFT, 88}, {12, SHIFT, 89}, },
			{{-1, REDUCE, 52}, },
			{{-1, ERROR, 73}, {2, SHIFT, 90}, {22, SHIFT, 91}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 74}, {1, SHIFT, 93}, },
			{{-1, ERROR, 75}, {25, SHIFT, 94}, },
			{{-1, REDUCE, 55}, },
			{{-1, REDUCE, 32}, {17, SHIFT, 95}, {18, SHIFT, 96}, {19, SHIFT, 97}, {20, SHIFT, 98}, },
			{{-1, ERROR, 78}, {13, SHIFT, 99}, },
			{{-1, ERROR, 79}, {13, SHIFT, 100}, },
			{{-1, ERROR, 80}, {13, SHIFT, 101}, },
			{{-1, ERROR, 81}, {13, SHIFT, 102}, },
			{{-1, ERROR, 82}, {13, SHIFT, 103}, },
			{{-1, ERROR, 83}, {13, SHIFT, 104}, },
			{{-1, ERROR, 84}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 85}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 86}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 87}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 88}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 89}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 90}, {25, SHIFT, 111}, },
			{{-1, REDUCE, 54}, },
			{{-1, REDUCE, 31}, {17, SHIFT, 112}, {18, SHIFT, 113}, {19, SHIFT, 114}, {20, SHIFT, 115}, },
			{{-1, REDUCE, 70}, },
			{{-1, REDUCE, 51}, },
			{{-1, ERROR, 95}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 96}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 97}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 98}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 99}, {23, SHIFT, 37}, },
			{{-1, ERROR, 100}, {23, SHIFT, 37}, },
			{{-1, ERROR, 101}, {23, SHIFT, 37}, },
			{{-1, ERROR, 102}, {23, SHIFT, 37}, },
			{{-1, ERROR, 103}, {23, SHIFT, 37}, },
			{{-1, ERROR, 104}, {23, SHIFT, 37}, },
			{{-1, ERROR, 105}, {13, SHIFT, 126}, },
			{{-1, ERROR, 106}, {13, SHIFT, 127}, },
			{{-1, ERROR, 107}, {13, SHIFT, 128}, },
			{{-1, ERROR, 108}, {13, SHIFT, 129}, },
			{{-1, ERROR, 109}, {13, SHIFT, 130}, },
			{{-1, ERROR, 110}, {13, SHIFT, 131}, },
			{{-1, REDUCE, 50}, },
			{{-1, ERROR, 112}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 113}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 114}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, ERROR, 115}, {23, SHIFT, 37}, {24, SHIFT, 9}, {25, SHIFT, 38}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 24}, },
			{{-1, REDUCE, 28}, },
			{{-1, REDUCE, 30}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 40}, },
			{{-1, REDUCE, 42}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 34}, },
			{{-1, ERROR, 126}, {23, SHIFT, 37}, },
			{{-1, ERROR, 127}, {23, SHIFT, 37}, },
			{{-1, ERROR, 128}, {23, SHIFT, 37}, },
			{{-1, ERROR, 129}, {23, SHIFT, 37}, },
			{{-1, ERROR, 130}, {23, SHIFT, 37}, },
			{{-1, ERROR, 131}, {23, SHIFT, 37}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 23}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 29}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 39}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 33}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 11}, },
			{{-1, 12}, {13, 59}, },
			{{-1, 13}, },
			{{-1, 14}, },
			{{-1, 15}, },
			{{-1, 16}, },
			{{-1, 17}, },
			{{-1, 18}, },
			{{-1, 19}, },
			{{-1, 20}, },
			{{-1, 21}, },
			{{-1, 22}, },
			{{-1, 23}, },
			{{-1, 24}, },
			{{-1, 25}, },
			{{-1, 26}, },
			{{-1, 27}, },
			{{-1, 28}, },
			{{-1, 29}, },
			{{-1, 30}, },
			{{-1, 31}, },
			{{-1, 32}, },
			{{-1, 33}, },
			{{-1, 39}, {4, 44}, {5, 45}, {6, 46}, {7, 47}, {48, 67}, {51, 69}, {52, 70}, {53, 71}, {54, 72}, {57, 74}, {60, 77}, {61, 78}, {62, 79}, {63, 80}, {64, 81}, {65, 82}, {66, 83}, {73, 92}, {84, 105}, {85, 106}, {86, 107}, {87, 108}, {88, 109}, {89, 110}, {95, 116}, {96, 117}, {97, 118}, {98, 119}, {112, 132}, {113, 133}, {114, 134}, {115, 135}, },
			{{-1, 34}, {8, 55}, },
			{{-1, 40}, {3, 43}, {50, 68}, {99, 120}, {100, 121}, {101, 122}, {102, 123}, {103, 124}, {104, 125}, {126, 136}, {127, 137}, {128, 138}, {129, 139}, {130, 140}, {131, 141}, },
			{{-1, 41}, {0, 35}, {8, 35}, {13, 35}, },
			{{-1, 42}, {0, 36}, {8, 36}, {13, 36}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'stop', 'fend', 'goto', 'param', 'ret', 'if', 'write', nombre, '@', identif",
			"expecting: nombre, '@', identif",
			"expecting: 'stop', 'fend', 'goto', 'param', 'ret', 'if', 'write', nombre, '@', identif, EOF",
			"expecting: nombre",
			"expecting: 'stop', 'fend', 'goto', 'param', 'ret', 'if', 'write', '@', identif",
			"expecting: '[', 'fbegin', '='",
			"expecting: EOF",
			"expecting: '='",
			"expecting: ']', 'stop', 'fend', '!=', '<', '<=', '>', '>=', '==', 'goto', 'param', 'ret', 'if', '-', '+', '*', '/', 'write', nombre, '@', identif, EOF",
			"expecting: '[', ']', 'stop', 'fend', '=', '!=', '<', '<=', '>', '>=', '==', 'goto', 'param', 'ret', 'if', '-', '+', '*', '/', 'write', nombre, '@', identif, EOF",
			"expecting: '!=', '<', '<=', '>', '>=', '=='",
			"expecting: ']', 'stop', 'fend', '=', '!=', '<', '<=', '>', '>=', '==', 'goto', 'param', 'ret', 'if', '-', '+', '*', '/', 'write', nombre, '@', identif, EOF",
			"expecting: 'call', 'read', nombre, '@', identif",
			"expecting: ']'",
			"expecting: identif",
			"expecting: 'stop', 'fend', 'goto', 'param', 'ret', 'if', '-', '+', '*', '/', 'write', nombre, '@', identif, EOF",
			"expecting: 'goto'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 1, 1, 1, 1, 4, 3, 5, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 7, 7, 8, 9, 2, 8, 8, 8, 2, 2, 2, 10, 2, 1, 2, 3, 1, 1, 1, 1, 7, 11, 1, 2, 6, 12, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 10, 2, 12, 13, 14, 2, 15, 16, 16, 16, 16, 16, 16, 1, 1, 1, 1, 1, 1, 14, 2, 15, 11, 2, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 16, 16, 16, 16, 16, 16, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
