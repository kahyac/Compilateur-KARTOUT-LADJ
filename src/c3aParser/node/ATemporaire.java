/* This file was generated by SableCC (http://www.sablecc.org/). */

package c3aParser.node;

import c3aParser.analysis.*;

@SuppressWarnings("nls")
public final class ATemporaire extends PTemporaire
{
    private TPrefixeTemp _prefixeTemp_;
    private TNombre _nombre_;

    public ATemporaire()
    {
        // Constructor
    }

    public ATemporaire(
        @SuppressWarnings("hiding") TPrefixeTemp _prefixeTemp_,
        @SuppressWarnings("hiding") TNombre _nombre_)
    {
        // Constructor
        setPrefixeTemp(_prefixeTemp_);

        setNombre(_nombre_);

    }

    @Override
    public Object clone()
    {
        return new ATemporaire(
            cloneNode(this._prefixeTemp_),
            cloneNode(this._nombre_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATemporaire(this);
    }

    public TPrefixeTemp getPrefixeTemp()
    {
        return this._prefixeTemp_;
    }

    public void setPrefixeTemp(TPrefixeTemp node)
    {
        if(this._prefixeTemp_ != null)
        {
            this._prefixeTemp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._prefixeTemp_ = node;
    }

    public TNombre getNombre()
    {
        return this._nombre_;
    }

    public void setNombre(TNombre node)
    {
        if(this._nombre_ != null)
        {
            this._nombre_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._nombre_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._prefixeTemp_)
            + toString(this._nombre_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._prefixeTemp_ == child)
        {
            this._prefixeTemp_ = null;
            return;
        }

        if(this._nombre_ == child)
        {
            this._nombre_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._prefixeTemp_ == oldChild)
        {
            setPrefixeTemp((TPrefixeTemp) newChild);
            return;
        }

        if(this._nombre_ == oldChild)
        {
            setNombre((TNombre) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
