/* This file was generated by SableCC (http://www.sablecc.org/). */

package c3aParser.node;

import c3aParser.analysis.*;

@SuppressWarnings("nls")
public final class AArg extends PArg
{
    private PEtiqop _etiqop_;
    private TParam _param_;
    private PCtv _ctv_;

    public AArg()
    {
        // Constructor
    }

    public AArg(
        @SuppressWarnings("hiding") PEtiqop _etiqop_,
        @SuppressWarnings("hiding") TParam _param_,
        @SuppressWarnings("hiding") PCtv _ctv_)
    {
        // Constructor
        setEtiqop(_etiqop_);

        setParam(_param_);

        setCtv(_ctv_);

    }

    @Override
    public Object clone()
    {
        return new AArg(
            cloneNode(this._etiqop_),
            cloneNode(this._param_),
            cloneNode(this._ctv_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAArg(this);
    }

    public PEtiqop getEtiqop()
    {
        return this._etiqop_;
    }

    public void setEtiqop(PEtiqop node)
    {
        if(this._etiqop_ != null)
        {
            this._etiqop_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._etiqop_ = node;
    }

    public TParam getParam()
    {
        return this._param_;
    }

    public void setParam(TParam node)
    {
        if(this._param_ != null)
        {
            this._param_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._param_ = node;
    }

    public PCtv getCtv()
    {
        return this._ctv_;
    }

    public void setCtv(PCtv node)
    {
        if(this._ctv_ != null)
        {
            this._ctv_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ctv_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._etiqop_)
            + toString(this._param_)
            + toString(this._ctv_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._etiqop_ == child)
        {
            this._etiqop_ = null;
            return;
        }

        if(this._param_ == child)
        {
            this._param_ = null;
            return;
        }

        if(this._ctv_ == child)
        {
            this._ctv_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._etiqop_ == oldChild)
        {
            setEtiqop((PEtiqop) newChild);
            return;
        }

        if(this._param_ == oldChild)
        {
            setParam((TParam) newChild);
            return;
        }

        if(this._ctv_ == oldChild)
        {
            setCtv((PCtv) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
