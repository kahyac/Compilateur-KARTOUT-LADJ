/* This file was generated by SableCC (http://www.sablecc.org/). */

package c3aParser.analysis;

import java.util.*;
import c3aParser.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProg(AProg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARecursifListeinst(ARecursifListeinst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFinalListeinst(AFinalListeinst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAddInst(AAddInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubInst(ASubInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMulInst(AMulInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivInst(ADivInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAffInst(AAffInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAJmpInst(AJmpInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAJmpegInst(AJmpegInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAJmpnegInst(AJmpnegInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAJmpinfInst(AJmpinfInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAJminfegInst(AJminfegInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAJmpsupInst(AJmpsupInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAJmpsupegInst(AJmpsupegInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFcallInst(AFcallInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIwriteInst(AIwriteInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIreadInst(AIreadInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArgInst(AArgInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAReturnInst(AReturnInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABeginInst(ABeginInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEndInst(AEndInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStopInst(AStopInst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAdd(AAdd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASub(ASub node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMul(AMul node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADiv(ADiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAffect(AAffect node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAJmpeg(AJmpeg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAJmpneg(AJmpneg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAJmpinf(AJmpinf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAJmpinfeg(AJmpinfeg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAJmpsup(AJmpsup node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAJmpsupeg(AJmpsupeg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAJmp(AJmp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABegin(ABegin node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEnd(AEnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFcall(AFcall node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIwrite(AIwrite node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIread(AIread node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArg(AArg node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAReturn(AReturn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIstop(AIstop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACCtv(ACCtv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATCtv(ATCtv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVCtv(AVCtv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATTv(ATTv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVTv(AVTv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAConstante(AConstante node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATemporaire(ATemporaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAScalaireVariable(AScalaireVariable node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATabVariable(ATabVariable node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACteEtiqop(ACteEtiqop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVideEtiqop(AVideEtiqop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEspaces(TEspaces node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCommentaire(TCommentaire node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCo(TCo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCf(TCf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCall(TCall node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStop(TStop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFbegin(TFbegin node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFend(TFend node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAff(TAff node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNoteq(TNoteq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInf(TInf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInfeq(TInfeq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSup(TSup node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSupeq(TSupeq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEq(TEq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGoto(TGoto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParam(TParam node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRet(TRet node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMoins(TMoins node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFois(TFois node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDivise(TDivise node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWrite(TWrite node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRead(TRead node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNombre(TNombre node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPrefixeTemp(TPrefixeTemp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdentif(TIdentif node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
