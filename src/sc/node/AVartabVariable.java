/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class AVartabVariable extends PVariable
{
    private PTypevar _second_;
    private TIdentif _identif_;
    private TCo _co_;
    private TNombre _nombre_;
    private TCf _cf_;

    public AVartabVariable()
    {
        // Constructor
    }

    public AVartabVariable(
        @SuppressWarnings("hiding") PTypevar _second_,
        @SuppressWarnings("hiding") TIdentif _identif_,
        @SuppressWarnings("hiding") TCo _co_,
        @SuppressWarnings("hiding") TNombre _nombre_,
        @SuppressWarnings("hiding") TCf _cf_)
    {
        // Constructor
        setSecond(_second_);

        setIdentif(_identif_);

        setCo(_co_);

        setNombre(_nombre_);

        setCf(_cf_);

    }

    @Override
    public Object clone()
    {
        return new AVartabVariable(
            cloneNode(this._second_),
            cloneNode(this._identif_),
            cloneNode(this._co_),
            cloneNode(this._nombre_),
            cloneNode(this._cf_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVartabVariable(this);
    }

    public PTypevar getSecond()
    {
        return this._second_;
    }

    public void setSecond(PTypevar node)
    {
        if(this._second_ != null)
        {
            this._second_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._second_ = node;
    }

    public TIdentif getIdentif()
    {
        return this._identif_;
    }

    public void setIdentif(TIdentif node)
    {
        if(this._identif_ != null)
        {
            this._identif_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identif_ = node;
    }

    public TCo getCo()
    {
        return this._co_;
    }

    public void setCo(TCo node)
    {
        if(this._co_ != null)
        {
            this._co_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._co_ = node;
    }

    public TNombre getNombre()
    {
        return this._nombre_;
    }

    public void setNombre(TNombre node)
    {
        if(this._nombre_ != null)
        {
            this._nombre_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._nombre_ = node;
    }

    public TCf getCf()
    {
        return this._cf_;
    }

    public void setCf(TCf node)
    {
        if(this._cf_ != null)
        {
            this._cf_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._cf_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._second_)
            + toString(this._identif_)
            + toString(this._co_)
            + toString(this._nombre_)
            + toString(this._cf_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._second_ == child)
        {
            this._second_ = null;
            return;
        }

        if(this._identif_ == child)
        {
            this._identif_ = null;
            return;
        }

        if(this._co_ == child)
        {
            this._co_ = null;
            return;
        }

        if(this._nombre_ == child)
        {
            this._nombre_ = null;
            return;
        }

        if(this._cf_ == child)
        {
            this._cf_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._second_ == oldChild)
        {
            setSecond((PTypevar) newChild);
            return;
        }

        if(this._identif_ == oldChild)
        {
            setIdentif((TIdentif) newChild);
            return;
        }

        if(this._co_ == oldChild)
        {
            setCo((TCo) newChild);
            return;
        }

        if(this._nombre_ == oldChild)
        {
            setNombre((TNombre) newChild);
            return;
        }

        if(this._cf_ == oldChild)
        {
            setCf((TCf) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
